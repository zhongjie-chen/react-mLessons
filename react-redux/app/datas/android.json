{
  "count": 10,
  "error": false,
  "results": [
    {
      "desc": "\u8fd8\u5728\u7528ListView\uff1f",
      "ganhuo_id": "57334c9d67765903fb61c418",
      "publishedAt": "2016-05-12T12:04:43.857000",
      "readability": "<div><div class=\"show-content\"><blockquote>\n<p>&#x8FD8;&#x5728;&#x7528;Lisview&#xFF1F;RecyclerView&#x90FD;&#x5DF2;&#x7ECF;&#x51FA;&#x6765;&#x4E00;&#x5E74;&#x591A;&#x4E86;&#xFF01;</p>\n<blockquote>\n<p>&#x60F3;&#x5FC5;&#x5927;&#x5BB6;&#x591A;&#x6216;&#x591A;&#x6216;&#x5C11;&#x7684;&#x63A5;&#x89E6;&#x8FC7;&#x6216;&#x8005;&#x4E86;&#x89E3;&#x8FC7;RecyclerView&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;&#x7528;&#x8D77;&#x6765;&#xFF0C;&#x539F;&#x56E0;&#x5927;&#x6982;&#x5982;&#x4E0B;&#xFF1F;</p>\n<ul>\n<li><strong>ListView&#x6211;&#x7528;&#x7684;&#x633A;&#x597D;&#x7684;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x6362;RecyclerView&#xFF1F;</strong></li>\n<li><strong>ListView&#x7A33;&#x5B9A;&#xFF0C;&#x719F;&#x6089;&#xFF0C;&#x8FD8;&#x77E5;&#x9053;&#x5F88;&#x591A;&#x5F00;&#x6E90;&#x5E93;&#xFF0C;&#x7279;&#x522B;&#x7684;&#x597D;&#x7528;&#xFF01;</strong></li>\n<li><strong>RecyclerView&#x4E0D;&#x80FD;&#x6DFB;&#x52A0;&#x5934;&#x90E8;&#xFF0C;ListView&#x80FD;&#xFF01;</strong></li>\n</ul>\n</blockquote>\n</blockquote>\n<h2>RecyclerView</h2>\n<p>&#x5728;Andorid 5.0&#x51FA;&#x6765;&#x4E0D;&#x4E45;&#xFF0C;&#x6211;&#x5C31;&#x5DF2;&#x7ECF;&#x5199;&#x8FC7;RecyclerView&#x7684;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4EE5;&#x53CA;&#x57FA;&#x672C;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x4E86;&#x89E3;&#x7684;&#x53EF;&#x4EE5;&#x770B;&#x770B;<a href=\"http://blog.csdn.net/cym492224103/article/details/41719497\" target=\"_blank\">ListView&#x5347;&#x7EA7;&#x7248;RecyclerView</a>&#xFF0C;&#x4E86;&#x89E3;&#x8FC7;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF0C;&#x5E76;&#x5F80;&#x4E0B;&#x770B;&#x3002;</p>\n<ul>\n<li>RecyclerView&#x6700;&#x5927;&#x7684;&#x4F18;&#x52BF;&#x5C31;&#x662F;&#x7075;&#x6D3B;&#xFF0C;RecyclerView&#x53EA;&#x9700;&#x6539;&#x53D8;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x5C31;&#x53EF;&#x4EE5;&#x53D8;&#x5316;&#x591A;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x5E03;&#x5C40;&#x663E;&#x793A;&#x6392;&#x7248;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x5BF9;&#x4E8E;&#x5F00;&#x53D1;&#x8005;&#x662F;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x7684;&#xFF01;</li>\n<li>RecyclerView.Adapter&#xFF0C;&#x6BD4;BaseAdapter&#x505A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x628A;BaseAdapter&#x7684;getView&#x65B9;&#x6CD5;&#x62C6;&#x5206;&#x6210;onCreateViewHolder&#x65B9;&#x6CD5;&#x548C;onBindViewHolder&#x65B9;&#x6CD5;&#xFF0C;&#x5F3A;&#x5236;&#x9700;&#x8981;&#x521B;&#x5EFA;ViewHolder&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x907F;&#x514D;&#x4E86;&#x521D;&#x5B66;&#x8005;&#x5199;&#x6027;&#x80FD;&#x4E0D;&#x4F73;&#x7684;&#x4EE3;&#x7801;</li>\n</ul>\n<h2>&#x5728;&#x5B9E;&#x6218;&#x4E2D;&#x6211;&#x4EEC;&#x4F1A;&#x9047;&#x5230;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#xFF1F;</h2>\n<blockquote><p>get&#x5230;&#x4E0B;&#x9762;&#x7684;&#x6280;&#x80FD;&#x5C31;&#x80FD;&#x591F;&#x5728;&#x4F7F;&#x7528;RcyclerView&#x7684;&#x5927;&#x8DEF;&#x4E0A;&#x7545;&#x901A;&#x65E0;&#x963B;&#x4E86;&#xFF01;</p></blockquote>\n<ul>\n<li><strong>&#x6DFB;&#x52A0;&#x5206;&#x5272;&#x7EBF;</strong></li>\n<li><strong>&#x6DFB;&#x52A0;&#x70B9;&#x6309;&#x6548;&#x679C;</strong></li>\n<li><strong>&#x5217;&#x8868;&#x52A8;&#x753B;</strong></li>\n<li><strong>&#x6539;&#x53D8;&#x67D0;&#x4E2A;&#x6570;&#x636E;&#x4FDD;&#x6301;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;</strong></li>\n<li><strong>&#x6DFB;&#x52A0;&#x5934;&#x90E8;&#x5C3E;&#x90E8;</strong></li>\n<li><strong>&#x5217;&#x8868;&#x5206;&#x7EC4;</strong></li>\n<li><strong>&#x5404;&#x79CD;&#x6548;&#x679C;&#x96C6;&#x6210;Demo</strong></li>\n<li><strong>&#x66F4;&#x7075;&#x6D3B;&#x7684;RecyclerView</strong></li>\n</ul>\n<h3>&#x6DFB;&#x52A0;&#x5206;&#x5272;&#x7EBF;</h3>\n<pre><code>//&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#x6DFB;&#x52A0;&#x5206;&#x5272;&#x7EBF;\nmRecyclerView.addItemDecoration(new DividerItemDecoration(this,DividerItemDecoration.VERTICAL_LIST));</code></pre>\n<p>DividerItemDecoration&#x9700;&#x8981;&#x7EE7;&#x627F;RecyclerView.ItemDecoration&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#x5B9E;&#x73B0;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5; &#x3002;&#x4F46;&#x662F;&#x6211;&#x611F;&#x89C9;&#x8FC7;&#x4E8E;&#x9EBB;&#x70E6;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x60F3;&#x5230;&#x7684;&#x662F;&#xFF1A;<br><strong>&#x76F4;&#x63A5;&#x5728;item_view&#x91CC;&#x9762;&#x5E95;&#x90E8;&#x81EA;&#x5DF1;&#x6DFB;&#x52A0;&#x4E00;&#x6839;&#x7EBF;&#x5E03;&#x5C40;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x65E0;&#x9700;&#x91CD;&#x5199;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x6837;&#x8FD8;&#x6709;&#x4E2A;&#x597D;&#x5904;&#x5C31;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x7EC6;&#x5FC3;&#x7684;&#x540C;&#x5B66;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x6DFB;&#x52A0;&#x5206;&#x5272;&#x7EBF;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;item&#x4E0B;&#x9762;&#x4E0D;&#x4F1A;&#x6709;&#x5206;&#x5272;&#x7EBF;&#xFF0C;&#x663E;&#x7136;&#x5F53;&#x6570;&#x636E;&#x91CF;&#x4E0D;&#x8DB3;&#x4E00;&#x4E2A;&#x5C4F;&#x5E55;&#x7684;&#x65F6;&#x5019;&#x663E;&#x5F97;&#x5F88;&#x7A81;&#x5140;&#xFF0C;&#x4F46;&#x662F;&#x5728;item_view&#x4E0B;&#x9762;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x7EBF;&#x7684;&#x5E03;&#x5C40;&#x5219;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;</strong></p>\n<h3>&#x6DFB;&#x52A0;&#x70B9;&#x6309;&#x6548;&#x679C;</h3>\n<p>RecyclerView&#x76F4;&#x63A5;&#x5728;item_view&#x91CC;&#x9762;&#x914D;&#x7F6E;&#x5373;&#x53EF;selector&#x5373;&#x53EF;&#x3002;</p>\n<h3>&#x52A8;&#x753B;</h3>\n<blockquote><p>&#x4E00;&#x4E2A;&#x597D;&#x7684;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#x5C31;&#x662F;&#x8981;&#x6709;&#x64CD;&#x4F5C;&#x52A8;&#x753B;&#x7684;&#x8FC7;&#x6E21;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x751F;&#x786C;&#x7684;&#x5237;&#x65B0;&#x5217;&#x8868;&#x3002;</p></blockquote>\n<p>&#x63A8;&#x8350;&#x4E00;&#x4E2A;RecyclerView&#x7684;&#x52A8;&#x753B;&#x5E93;&#xFF08;<a href=\"https://github.com/wasabeef/recyclerview-animators\" target=\"_blank\">recyclerview-animators</a>&#xFF09; </p><div class=\"image-package\">\n<img src=\"https://github.com/wasabeef/recyclerview-animators/raw/master/art/demo2.gif\"><br><p class=\"image-caption\">&#x8FD9;&#x91CC;&#x5199;&#x56FE;&#x7247;&#x63CF;&#x8FF0;</p>\n</div>\n<p>RecyclerView&#x81EA;&#x5E26;&#x6DFB;&#x52A0;&#x3001;&#x5220;&#x9664;&#x52A8;&#x753B;&#xFF0C;&#x800C;ListView&#x5219;&#x9700;&#x6DFB;&#x52A0;&#x989D;&#x5916;&#x7684;&#x4EE3;&#x7801;&#x624D;&#x80FD;&#x5B9E;&#x73B0;&#x3002;<br><strong>&#x5220;&#x9664;&#x8C03;&#x7528;RecyclerView&#x7684;adapter&#x7684;notifyItemRemoved</strong><br><strong>&#x6DFB;&#x52A0;&#x8C03;&#x7528;RecyclerView&#x7684;adapter&#x7684;notifyItemInserted</strong></p>\n<p>&#x8BF4;&#x5230;adapter&#x6211;&#x4EEC;&#x5C31;&#x6765;&#x8BF4;&#x8BF4;RecyclerView.Adapter&#x548C;BaseAdapter&#x76F8;&#x6BD4;&#xFF0C;&#x989D;&#x5916;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E0B;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#xFF1A;</p>\n<pre><code>// &#x6570;&#x636E;&#x53D1;&#x751F;&#x4E86;&#x6539;&#x53D8;&#xFF0C;&#x90A3;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x4F20;&#x5165;&#x6539;&#x53D8;&#x5BF9;&#x8C61;&#x7684;&#x4F4D;&#x7F6E;&#x3002;\npublic final void notifyItemChanged(int position);\n// &#x53EF;&#x4EE5;&#x5237;&#x65B0;&#x4ECE;positionStart&#x5F00;&#x59CB;itemCount&#x6570;&#x91CF;&#x7684;item&#x4E86;\npublic final void notifyItemRangeChanged(int positionStart, int itemCount);\n// &#x6DFB;&#x52A0;&#xFF0C;&#x4F20;&#x5165;&#x5BF9;&#x8C61;&#x7684;&#x4F4D;&#x7F6E;&#x3002;\npublic final void notifyItemInserted(int position);\n// &#x5220;&#x9664;&#xFF0C;&#x4F20;&#x5165;&#x5BF9;&#x8C61;&#x7684;&#x4F4D;&#x7F6E;&#x3002;\npublic final void notifyItemRemoved(int position);\n// &#x5BF9;&#x8C61;&#x4ECE;fromPosition&#x79FB;&#x52A8;&#x5230;toPosition \npublic final void notifyItemMoved(int fromPosition, int toPosition); \n//&#x6279;&#x91CF;&#x6DFB;&#x52A0; \npublic final void notifyItemRangeInserted(int positionStart, int itemCount);\n//&#x6279;&#x91CF;&#x5220;&#x9664;\npublic final void notifyItemRangeRemoved(int positionStart, int itemCount);</code></pre>\n<h3>&#x6539;&#x53D8;&#x5217;&#x8868;&#x67D0;&#x4E2A;&#x5E03;&#x5C40;&#x72B6;&#x6001;&#x4E14;&#x4FDD;&#x6301;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;</h3>\n<p>&#x8FD9;&#x79CD;&#x9700;&#x6C42;&#x662F;&#x666E;&#x904D;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x6539;&#x53D8;&#x5217;&#x8868;&#x67D0;&#x4E00;&#x4E2A;item&#x6570;&#x636E;&#xFF0C;&#x7136;&#x540E;&#x5237;&#x65B0;&#x5217;&#x8868;&#xFF0C;&#x5982;&#x679C;&#x662F;ListView&#x5237;&#x65B0;&#x540E;&#x5219;&#x4F1A;&#x56DE;&#x5230;&#x6700;&#x9876;&#x90E8;&#xFF0C;&#x800C;RecyclerView&#x540C;&#x6837;&#x7684;&#x64CD;&#x4F5C;&#x4F46;&#x662F;&#x539F;&#x6765;&#x6ED1;&#x52A8;&#x7684;&#x4F4D;&#x7F6E;&#x4E0D;&#x53D8;&#x3002;</p>\n\n<p><a href=\"https://github.com/CymChad/BaseRecyclerViewAdapterHelper\" target=\"_blank\">BaseRecyclerViewAdapterHelper</a> </p>\n<div class=\"image-package\">\n<img src=\"http://upload-images.jianshu.io/upload_images/972352-c7858feebce4b8fe.gif?imageMogr2/auto-orient/strip\"><br><p class=\"image-caption\">&#x6548;&#x679C;&#x5C55;&#x793A;</p>\n</div>\n<h3>&#x5E03;&#x5C40;&#x66F4;&#x7075;&#x6D3B;&#x7684;RecyclerView</h3>\n<p><a href=\"https://github.com/lucasr/twoway-view\" target=\"_blank\">twoway-view</a> &#x5C01;&#x88C5;&#x4E86;RecyclerView&#x5E38;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;click&#x7B49;&#x7B49;,&#x4EE5;&#x53CA;&#x652F;&#x6301;&#x4E86;&#x66F4;&#x591A;&#x4E0D;&#x540C;&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x4F7F;&#x5F97;RecyclerView&#x4F7F;&#x7528;&#x8D77;&#x6765;&#x66F4;&#x7B80;&#x5355;&#xFF01; </p><div class=\"image-package\">\n<img src=\"https://github.com/lucasr/twoway-view/raw/master/images/sample.png\"><br><p class=\"image-caption\">&#x8FD9;&#x91CC;&#x5199;&#x56FE;&#x7247;&#x63CF;&#x8FF0;</p>\n</div>\n<blockquote><p>&#x9020;&#x8D77;&#x6765;&#xFF01;&#x5C0F;&#x4F19;&#x4F34;&#x4EEC;&#xFF01;</p></blockquote>\n\n</div>\n        </div>",
      "type": "Android",
      "url": "http://www.jianshu.com/p/a92955be0a3e",
      "who": "\u9648\u5b87\u660e"
    },
    {
      "desc": "listview\u7684\u6298\u53e0\u6548\u679c",
      "ganhuo_id": "56cc6d1d421aa95caa7076fa",
      "publishedAt": "2015-07-17T03:43:22.395000",
      "readability": "<div><article class=\"markdown-body entry-content\">\n\n<p>ListView&#x6298;&#x53E0;&#x6548;&#x679C;</p>\n\n<h2><a id=\"user-content-screenshots\" class=\"anchor\" href=\"https://github.com/dodola/ListItemFold#screenshots\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Screenshots</h2>\n\n<p><a href=\"https://raw.githubusercontent.com/dodola/ListItemFold/master/screenshot/fold.gif\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/dodola/ListItemFold/master/screenshot/fold.gif\" alt=\"image\"></a></p>\n\n<p><a href=\"http://www.youtube.com/watch?v=Tjt37wINiF4\"><img src=\"http://img.youtube.com/vi/Tjt37wINiF4/0.jpg\" alt=\"List\"></a></p>\n\n<h2><a id=\"user-content-license\" class=\"anchor\" href=\"https://github.com/dodola/ListItemFold#license\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>License</h2>\n\n<p>The MIT License (MIT)</p>\n\n<p>Copyright (c) 2015 dodola</p>\n\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n</article>\n  </div>",
      "type": "Android",
      "url": "https://github.com/dodola/ListItemFold",
      "who": "Jason"
    },
    {
      "desc": "YLListView\u4effIOS\u5f39\u7c27\u6548\u679c\u7684ListView",
      "ganhuo_id": "56cc6d29421aa95caa70827e",
      "publishedAt": "2016-02-29T12:19:00.015000",
      "readability": "<div><article class=\"markdown-body entry-content\">\n\n<p>YLListView&#x4EFF;IOS&#x5F39;&#x7C27;&#x6548;&#x679C;&#x7684;ListView</p>\n\n<p><a href=\"https://raw.githubusercontent.com/yll2wcf/YLListView/master/gif/1.gif\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/yll2wcf/YLListView/master/gif/1.gif\" alt=\"\"></a></p>\n\n<p>&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</p>\n\n<pre><code> compile 'com.a520wcf.yllistview:YLListView:1.0.1'\n</code></pre>\n\n<p>&#x4F7F;&#x7528;&#x4ECB;&#x7ECD;:</p>\n\n<p>&#x5E03;&#x5C40;:</p>\n\n<pre><code>&lt;com.a520wcf.yllistview.YLListView\n    android:divider=\"@android:color/transparent\"\n    android:id=\"@+id/listView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    /&gt;  \n</code></pre>\n\n<p>&#x4EE3;&#x7801;:</p>\n\n<pre><code>private YLListView listView;\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    listView = (YLListView) findViewById(R.id.listView);\n    // &#x4E0D;&#x6DFB;&#x52A0;&#x4E5F;&#x6709;&#x9ED8;&#x8BA4;&#x7684;&#x5934;&#x548C;&#x5E95;\n    View topView=View.inflate(this,R.layout.top,null);\n    listView.addHeaderView(topView);\n    View bottomView=new View(getApplicationContext());\n    listView.addFooterView(bottomView);\n\n    // &#x9876;&#x90E8;&#x548C;&#x5E95;&#x90E8;&#x4E5F;&#x53EF;&#x4EE5;&#x56FA;&#x5B9A;&#x6700;&#x7EC8;&#x7684;&#x9AD8;&#x5EA6; &#x4E0D;&#x56FA;&#x5B9A;&#x5C31;&#x4F7F;&#x7528;&#x5E03;&#x5C40;&#x672C;&#x8EAB;&#x7684;&#x9AD8;&#x5EA6;\n    listView.setFinalBottomHeight(100);\n    listView.setFinalTopHeight(100);\n\n    listView.setAdapter(new DemoAdapter());\n\n    //YLListView&#x9ED8;&#x8BA4;&#x6709;&#x5934;&#x548C;&#x5E95;  &#x5904;&#x7406;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x4F4D;&#x7F6E;&#x6CE8;&#x610F;&#x51CF;&#x53BB;\n    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n        @Override\n        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {\n            position=position-listView.getHeaderViewsCount();\n        }\n    });\n\n\n}\n</code></pre>\n</article>\n  </div>",
      "type": "Android",
      "url": "https://github.com/yll2wcf/YLListView",
      "who": "Jason"
    },
    {
      "desc": "\u7ed9scrollview\u3001listview\u3001recycleview\u6dfb\u52a0header\u4e0efooter",
      "ganhuo_id": "56cc6d23421aa95caa707ab2",
      "publishedAt": "2015-07-02T03:50:48.024000",
      "readability": "<div><div id=\"js-repo-pjax-container\" class=\"repository-content context-loader-container\">\n          \n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  \n  \n\n  <div class=\"file-wrap\">\n    <table class=\"files\">\n\n      \n<tbody class=\"\">\n\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/tree/master/.idea\" class=\"js-directory-link\" id=\"95b55b1e3a304f4e340394a679893575-656b39bd98683e450af7c8e1d4736bb9f35df9ee\" title=\".idea\">.idea</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/50e5243bc107dea87db74be91e80d24a2638b28f\" class=\"message\" title=\"Added butterknife\">Added butterknife</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-07-07T00:40:55Z\">July 06, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/tree/master/app\" class=\"js-directory-link\" id=\"d2a57dc1d883fd21fb9951699df71cc7-7a9c6521772a080270920b283a57e7aab5b43cee\" title=\"app\">app</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/4b6f6404de29aaf4e4ed2bf24cf723ed56e7c42c\" class=\"message\" title=\"Bug fixes\">Bug fixes</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-07-16T07:52:32Z\">July 16, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/tree/master/gradle\" class=\"js-directory-link\" id=\"8ed1a771bc236c287ad93c699bfdd2d7-42cd74daa8500bbdae82280ecfc1baf3de87f2db\" title=\"gradle\">gradle</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/9223bcf737755533498af92e8f16671a4b42f7c8\" class=\"message\" title=\"Added quickreturnheaderlistfragment\">Added quickreturnheaderlistfragment</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-28T04:07:16Z\">June 27, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/tree/master/images\" class=\"js-directory-link\" id=\"59b514174bffe4ae402b3d63aad79fe0-fc905932e44b60e4a4e3c3a0b3608aadf5cad767\" title=\"images\">images</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/28fa7fb8fd049626baa08d87fe045c40c6a90e6d\" class=\"message\" title=\"Updated gif\">Updated gif</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-07-06T01:17:43Z\">July 05, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/.gitignore\" class=\"js-directory-link\" id=\"a084b794bc0759e7a6b77810e01874f2-0f885ac8988dafa183eddb434d69bea1f1b04529\" title=\".gitignore\">.gitignore</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/aa76a67d90775f9f95b9d3337be21acbc0b14db5\" class=\"message\" title=\"Initial commit\">Initial commit</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-24T07:44:55Z\">June 24, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/QuickReturn.iml\" class=\"js-directory-link\" id=\"09b2ca0ee17bc2e457f8b0e10454b0b5-0bb6048ae08a8e6e87a69ee6b675e1d40b6e648b\" title=\"QuickReturn.iml\">QuickReturn.iml</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/9223bcf737755533498af92e8f16671a4b42f7c8\" class=\"message\" title=\"Added quickreturnheaderlistfragment\">Added quickreturnheaderlistfragment</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-28T04:07:16Z\">June 28, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/README.md\" class=\"js-directory-link\" id=\"04c6e90faac2675aa89e2176d2eec7d8-12ae9fb97373ffc896ab0bca707ed6054b4ce604\" title=\"README.md\">README.md</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/28c00305500d1ff0b610458a62e250d6ddb444a0\" class=\"message\" title=\"Updated README.md\">Updated README.md</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-07-07T07:40:11Z\">July 07, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/build.gradle\" class=\"js-directory-link\" id=\"c197962302397baf3a4cc36463dce5ea-a1d991f77c6abebb740fad7a0806b8bc91d1a4e7\" title=\"build.gradle\">build.gradle</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/9223bcf737755533498af92e8f16671a4b42f7c8\" class=\"message\" title=\"Added quickreturnheaderlistfragment\">Added quickreturnheaderlistfragment</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-28T04:07:16Z\">June 28, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/gradle.properties\" class=\"js-directory-link\" id=\"503f218d646c10f484fdc9d6315bf2e3-5d08ba75bb97fd0f586f3c64e237c3439dbb5925\" title=\"gradle.properties\">gradle.properties</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/aa76a67d90775f9f95b9d3337be21acbc0b14db5\" class=\"message\" title=\"Initial commit\">Initial commit</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-24T07:44:55Z\">June 24, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/gradlew\" class=\"js-directory-link\" id=\"36ffbd2ea7085cf19547193a7faf30c8-91a7e269e19dfc62e27137a0b57ef3e430cee4fd\" title=\"gradlew\">gradlew</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/aa76a67d90775f9f95b9d3337be21acbc0b14db5\" class=\"message\" title=\"Initial commit\">Initial commit</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-24T07:44:55Z\">June 24, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/gradlew.bat\" class=\"js-directory-link\" id=\"c9b677a57d25a366595a35b2230d0502-aec99730b4e8fcd90b57a0e8e01544fea7c31a89\" title=\"gradlew.bat\">gradlew.bat</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/aa76a67d90775f9f95b9d3337be21acbc0b14db5\" class=\"message\" title=\"Initial commit\">Initial commit</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-24T07:44:55Z\">June 24, 2014</time></span>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"icon\">\n        \n        <img alt=\"\" class=\"spinner\" src=\"https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif\" width=\"16\">\n      </td>\n      <td class=\"content\">\n        <span class=\"css-truncate css-truncate-target\"><a href=\"https://github.com/lawloretienne/QuickReturn/blob/master/settings.gradle\" class=\"js-directory-link\" id=\"88b7c47e47b8ee65263b6784b86fa0a7-e7b4def49cb53d9aa04228dd3edb14c9e635e003\" title=\"settings.gradle\">settings.gradle</a></span>\n      </td>\n      <td class=\"message\">\n        <span class=\"css-truncate css-truncate-target \">\n          <a href=\"https://github.com/lawloretienne/QuickReturn/commit/aa76a67d90775f9f95b9d3337be21acbc0b14db5\" class=\"message\" title=\"Initial commit\">Initial commit</a>\n        </span>\n      </td>\n      <td class=\"age\">\n        <span class=\"css-truncate css-truncate-target\"><time datetime=\"2014-06-24T07:44:55Z\">June 24, 2014</time></span>\n      </td>\n    </tr>\n</tbody>\n\n    </table>\n  </div>\n\n\n  <div id=\"readme\" class=\"clearfix announce instapaper_body md\">\n    <span class=\"name\">\n      \n      README.md\n    </span>\n\n    <article class=\"markdown-body entry-content\">\n\n<p>Showcases QuickReturn view as a header, footer, and both header and footer.</p>\n\n<p>Support for ScrollView and ListView</p>\n\n<p>Now supports Twitter and Facebook QuickReturn</p>\n\n<p>Download the app by clicking on the badge below.</p>\n\n<p><a href=\"https://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn\">\n  <img alt=\"Get it on Google Play\" src=\"https://github.com/lawloretienne/QuickReturn/raw/master/images/en_generic_rgb_wo_60.png\"></a></p>\n\n<p><a href=\"https://raw.githubusercontent.com/lawloretienne/QuickReturn/master/images/quick_return_demo.gif\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/lawloretienne/QuickReturn/master/images/quick_return_demo.gif\"></a></p></article>\n  </div>\n\n\n        </div>\n\n      </div>",
      "type": "Android",
      "url": "https://github.com/lawloretienne/QuickReturn",
      "who": "Jason"
    },
    {
      "desc": "\u8fc7\u6ee4\u51fa\u591a\u91cd\u9009\u62e9\u7684ListView",
      "ganhuo_id": "56cc6d23421aa95caa707be6",
      "publishedAt": "2015-08-10T04:09:39.936000",
      "readability": "<div><article class=\"markdown-body entry-content\">\n\n<p>FilterSelectorListView is useful for making multiple selection with see selection on the top of ListView.</p>\n\n<h2><a id=\"user-content-screenshot\" class=\"anchor\" href=\"https://github.com/pchauhan/FilterSelectorListView#screenshot\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Screenshot</h2>\n\n<p><a href=\"https://raw.githubusercontent.com/pchauhan/FilterSelectorListView/master/Screenshots/1.png\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/pchauhan/FilterSelectorListView/master/Screenshots/1.png\" alt=\"1\"></a><a href=\"https://raw.githubusercontent.com/pchauhan/FilterSelectorListView/master/Screenshots/2.png\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/pchauhan/FilterSelectorListView/master/Screenshots/2.png\" alt=\"2\"></a></p>\n\n<p>you can download to see example  for more understanding.</p>\n\n<h2><a id=\"user-content-compatibility\" class=\"anchor\" href=\"https://github.com/pchauhan/FilterSelectorListView#compatibility\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Compatibility</h2>\n\n\n\n<p><a href=\"https://android-arsenal.com/details/1/2256\"><img src=\"https://camo.githubusercontent.com/fe8b3c0d60160f592c1ac2c5b5fbf3cb7350708f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f6964253230417273656e616c2d46696c74657253656c6563746f724c697374566965772d677265656e2e7376673f7374796c653d666c6174\" alt=\"Android Arsenal\"></a></p>\n\n<h2><a id=\"user-content-iphone\" class=\"anchor\" href=\"https://github.com/pchauhan/FilterSelectorListView#iphone\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>iPhone</h2>\n\n<ul>\n<li>Please check <a href=\"https://github.com/Darshanptl7500/MultiSelectController\">MultiSelectController</a> for iPhone</li>\n</ul>\n\n<h2><a id=\"user-content-license\" class=\"anchor\" href=\"https://github.com/pchauhan/FilterSelectorListView#license\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>License</h2>\n\n<p>The MIT License (MIT)</p>\n\n<p>Copyright (c) 2015 Parag Chauhan</p>\n\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n\n<p>The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.</p>\n\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.</p>\n</article>\n  </div>",
      "type": "Android",
      "url": "https://github.com/pchauhan/FilterSelectorListView",
      "who": "Jason"
    },
    {
      "desc": "Android Data Binding Adapter for ListView and RecyclerView.",
      "ganhuo_id": "56cc6d23421aa95caa707ac9",
      "publishedAt": "2015-07-21T04:10:11.904000",
      "readability": "<div><article class=\"markdown-body entry-content\">\n\n<p><a href=\"https://maven-badges.herokuapp.com/maven-central/me.tatarka.bindingcollectionadapter/bindingcollectionadapter\"><img src=\"https://camo.githubusercontent.com/294d25f58aa0bac303e7d2a38cc17a02829c20f5/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f6d652e74617461726b612e62696e64696e67636f6c6c656374696f6e616461707465722f62696e64696e67636f6c6c656374696f6e616461707465722f62616467652e7376673f7374796c653d666c6174\" alt=\"Maven Central\"></a></p>\n\n<p>Easy way to bind collections to listviews and recyclerviews with the new <a href=\"https://developer.android.com/tools/data-binding/guide.html\">Android Data Binding framework</a>.</p>\n\n<h2><a id=\"user-content-download\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#download\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Download</h2>\n\n<div class=\"highlight highlight-source-groovy\"><pre>compile <span class=\"pl-s\"><span class=\"pl-pds\">'</span>me.tatarka.bindingcollectionadapter:bindingcollectionadapter:1.1.0<span class=\"pl-pds\">'</span></span>\ncompile <span class=\"pl-s\"><span class=\"pl-pds\">'</span>me.tatarka.bindingcollectionadapter:bindingcollectionadapter-recyclerview:1.1.0<span class=\"pl-pds\">'</span></span></pre></div>\n\n<p>requires at least android gradle plugin <code>1.5.0</code>.</p>\n\n<h2><a id=\"user-content-usage\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#usage\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Usage</h2>\n\n<p>You need to provide your items and an <code>ItemView</code> to bind to the layout. You should use an\n<code>ObservableList</code> to automatically update your view based on list changes. However, you can\nuse any <code>List</code> if you don't need that functionality.</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">ViewModel</span> {\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">ObservableList&lt;<span class=\"pl-smi\">String</span>&gt;</span> items <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ObservableArrayList&lt;&gt;</span>();\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ItemView</span> itemView <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ItemView</span><span class=\"pl-k\">.</span>of(<span class=\"pl-c1\">BR</span><span class=\"pl-k\">.</span>item, <span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>layout<span class=\"pl-k\">.</span>item);\n}</pre></div>\n\n<p>Then bind it to the collection view with <code>app:items</code> and <code>app:itemView</code>. There are also some \nconvience factories to attach a <code>LayoutManager</code> to a <code>RecyclerView</code> with <code>app:layoutManager</code>.</p>\n\n<div class=\"highlight highlight-text-xml\"><pre><span class=\"pl-c\">&lt;!-- layout.xml --&gt;</span>\n&lt;<span class=\"pl-ent\">layout</span> <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">android</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://schemas.android.com/apk/res/android<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">app</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://schemas.android.com/apk/res-auto<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">data</span>&gt;\n      &lt;<span class=\"pl-ent\">variable</span> <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>viewModel<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.example.ViewModel<span class=\"pl-pds\">\"</span></span>/&gt; \n      &lt;<span class=\"pl-ent\">import</span> <span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>me.tatarka.bindingcollectionadapter.LayoutManagers<span class=\"pl-pds\">\"</span></span> /&gt;\n    &lt;/<span class=\"pl-ent\">data</span>&gt;\n\n    &lt;<span class=\"pl-ent\">ListView</span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">items</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.items}<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">itemView</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.itemView}<span class=\"pl-pds\">\"</span></span>/&gt;\n\n    &lt;<span class=\"pl-ent\">android</span>.support.v7.widget.RecyclerView\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layoutManager</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{LayoutManagers.linear()}<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">items</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.items}<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">itemView</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.itemView}<span class=\"pl-pds\">\"</span></span>/&gt;\n\n    &lt;<span class=\"pl-ent\">android</span>.support.v4.view.ViewPager\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">items</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.items}<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">itemView</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.itemView}<span class=\"pl-pds\">\"</span></span>/&gt;\n\n    &lt;<span class=\"pl-ent\">Spinner</span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">items</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.items}<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">itemView</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.itemView}<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">dropDownItemView</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.dropDownItemView}<span class=\"pl-pds\">\"</span></span>/&gt;\n&lt;/<span class=\"pl-ent\">layout</span>&gt;</pre></div>\n\n<p>In your item layout, the collection item will be bound to the variable with the\nname you passed into the <code>ItemView</code>.</p>\n\n<div class=\"highlight highlight-text-xml\"><pre><span class=\"pl-c\">&lt;!-- item.xml --&gt;</span>\n&lt;<span class=\"pl-ent\">layout</span> <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">android</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://schemas.android.com/apk/res/android<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">app</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://schemas.android.com/apk/res-auto<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">data</span>&gt;\n      &lt;<span class=\"pl-ent\">variable</span> <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>item<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">type</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>String<span class=\"pl-pds\">\"</span></span>/&gt; \n    &lt;/<span class=\"pl-ent\">data</span>&gt;\n\n    &lt;<span class=\"pl-ent\">TextView</span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@+id/text<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>wrap_content<span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">text</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{item}<span class=\"pl-pds\">\"</span></span>/&gt;\n&lt;/<span class=\"pl-ent\">layout</span>&gt;</pre></div>\n\n<h2><a id=\"user-content-multiple-view-types\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#multiple-view-types\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Multiple View Types</h2>\n\n<p>You can use multiple view types by using a <code>ItemViewSelector</code> instead. You can still bind\nit to the view with <code>app:itemView</code>.</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">ItemViewSelector&lt;<span class=\"pl-smi\">String</span>&gt;</span> itemView <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">BaseItemViewSelector&lt;<span class=\"pl-smi\">String</span>&gt;</span>() {\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">select</span>(<span class=\"pl-smi\">ItemView</span> <span class=\"pl-v\">itemView</span>, <span class=\"pl-k\">int</span> <span class=\"pl-v\">position</span>, <span class=\"pl-smi\">String</span> <span class=\"pl-v\">item</span>) {\n        itemView<span class=\"pl-k\">.</span>set(<span class=\"pl-c1\">BR</span><span class=\"pl-k\">.</span>item, position <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">?</span> <span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>layout<span class=\"pl-k\">.</span>item_header <span class=\"pl-k\">:</span> <span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>layout<span class=\"pl-k\">.</span>item);\n    }\n\n    <span class=\"pl-c\">// You need to override this method when using a ListView as it requires to know how</span>\n    <span class=\"pl-c\">// many view types there are immedeatly. RecyclerView and ViewPager don't need this.</span>\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">int</span> <span class=\"pl-en\">viewTypeCount</span>() {\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">2</span>;\n    }\n};</pre></div>\n\n<p>Note that <code>select</code> is called many times so you should not do any complex processing in there. If you \ndon't need to bind an item at a specific position (a static footer for example) you can use \n<code>ItemView.BINDING_VARIABLE_NONE</code> as the binding varibale.</p>\n\n<h2><a id=\"user-content-additonal-adapter-configuration\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#additonal-adapter-configuration\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Additonal Adapter Configuration</h2>\n\n<h3><a id=\"user-content-listview\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#listview\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>ListView</h3>\n\n<p>You can set a callback to give an id for each item in the list with</p>\n\n<div class=\"highlight highlight-source-java\"><pre>adapter<span class=\"pl-k\">.</span>setItemIds(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">BindingListViewAdapter</span>.<span class=\"pl-k\">ItemIds&lt;<span class=\"pl-smi\">T</span>&gt;</span>() {\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">long</span> <span class=\"pl-en\">getItemId</span>(<span class=\"pl-k\">int</span> <span class=\"pl-v\">position</span>, <span class=\"pl-smi\">T</span> <span class=\"pl-v\">item</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c\">// Calculate item id.</span>\n    }\n});</pre></div>\n\n<p>or by defining <code>app:itemIds=\"@{itemIds}\"</code> in the <code>ListView</code> in your layout file.\nSetting this will make <code>hasStableIds</code> return true which can increase performance of data changes.</p>\n\n<p>You can set a callback for <code>isEnabled()</code> as well with</p>\n\n<div class=\"highlight highlight-source-java\"><pre>adapter<span class=\"pl-k\">.</span>setItemEnabled(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">BindingListViewAdapter</span>.<span class=\"pl-k\">ItemEnabled&lt;<span class=\"pl-smi\">T</span>&gt;</span>() {\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> <span class=\"pl-en\">isEnabled</span>(<span class=\"pl-k\">int</span> <span class=\"pl-v\">position</span>, <span class=\"pl-smi\">T</span> <span class=\"pl-v\">item</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c\">// Calculate if item is enabled.</span>\n    }\n});</pre></div>\n\n<p>or by defining <code>app:itemEnabled=\"@{itemEnabled}\"</code>in the <code>ListView</code> in you layout file.</p>\n\n<h3><a id=\"user-content-viewpager\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#viewpager\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>ViewPager</h3>\n\n<p>You can set a callback to give a page title for each item in the list with</p>\n\n<div class=\"highlight highlight-source-java\"><pre>adapter<span class=\"pl-k\">.</span>setPageTitles(<span class=\"pl-k\">new</span> <span class=\"pl-k\">PageTitles&lt;<span class=\"pl-smi\">T</span>&gt;</span>() {\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">CharSequence</span> <span class=\"pl-en\">getPageTitle</span>(<span class=\"pl-k\">int</span> <span class=\"pl-v\">position</span>, <span class=\"pl-smi\">T</span> <span class=\"pl-v\">item</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Page Title<span class=\"pl-pds\">\"</span></span>;\n    }\n});</pre></div>\n\n<p>or by defining <code>app:pageTitles=\"@{pageTitles}\"</code> in the <code>ViewPager</code> in your layout file.</p>\n\n<h2><a id=\"user-content-directly-manipulating-views\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#directly-manipulating-views\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Directly manipulating views</h2>\n\n<p>Data binding is awesome and all, but you may run into a case where you simply need to manipulate the \nviews directly. You can do this without throwing away the whole of databinding by subclassing an \nexisting <code>BindingCollectionAdapter</code>. You can then bind <code>adapter</code> in your layout to your subclass's \nclass name to have it use that instead. Instead of overriding the normal adapter methods, you should \noverride <code>onCreateBinding()</code> or <code>onBindBinding()</code> and call <code>super</code> allowing you to run code before \nand after those events and get access to the item view's binding.</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">MyRecyclerViewAdapter</span>&lt;T&gt; <span class=\"pl-k\">extends</span> <span class=\"pl-e\">BindingRecyclerViewAdapter&lt;<span class=\"pl-smi\">T</span>&gt;</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-en\">LoggingRecyclerViewAdapter</span>(<span class=\"pl-k\">@NonNull</span> <span class=\"pl-k\">ItemViewArg&lt;<span class=\"pl-smi\">T</span>&gt;</span> <span class=\"pl-v\">arg</span>) {\n      <span class=\"pl-v\">super</span>(arg);\n    }\n\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">ViewDataBinding</span> <span class=\"pl-en\">onCreateBinding</span>(<span class=\"pl-smi\">LayoutInflater</span> <span class=\"pl-v\">inflater</span>, <span class=\"pl-k\">@LayoutRes</span> <span class=\"pl-k\">int</span> <span class=\"pl-v\">layoutId</span>, <span class=\"pl-smi\">ViewGroup</span> <span class=\"pl-v\">viewGroup</span>) {\n        <span class=\"pl-smi\">ViewDataBinding</span> binding <span class=\"pl-k\">=</span> <span class=\"pl-v\">super</span><span class=\"pl-k\">.</span>onCreateBinding(inflater, layoutId, viewGroup);\n        <span class=\"pl-smi\">Log</span><span class=\"pl-k\">.</span>d(<span class=\"pl-c1\">TAG</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>created binding: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> binding);\n        <span class=\"pl-k\">return</span> binding;\n    }\n\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">onBindBinding</span>(<span class=\"pl-smi\">ViewDataBinding</span> <span class=\"pl-v\">binding</span>, <span class=\"pl-k\">int</span> <span class=\"pl-v\">bindingVariable</span>, <span class=\"pl-k\">@LayoutRes</span> <span class=\"pl-k\">int</span> <span class=\"pl-v\">layoutId</span>, <span class=\"pl-k\">int</span> <span class=\"pl-v\">position</span>, <span class=\"pl-smi\">T</span> <span class=\"pl-v\">item</span>) {\n        <span class=\"pl-v\">super</span><span class=\"pl-k\">.</span>onBindBinding(binding, bindingVariable, layoutId, position, item);\n        <span class=\"pl-smi\">Log</span><span class=\"pl-k\">.</span>d(<span class=\"pl-c1\">TAG</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bound binding: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> binding <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> at position: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> position);\n    }\n}</pre></div>\n\n<div class=\"highlight highlight-text-xml\"><pre>&lt;<span class=\"pl-ent\">android</span>.support.v7.widget.RecyclerView\n  <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layoutManager</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{LayoutManagers.linear()}<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">items</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.items}<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">itemView</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.itemView}<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">adapter</span>=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>@{\"com.example.MyRecyclerViewAdapter\"}<span class=\"pl-pds\">'</span></span>/&gt;</pre></div>\n\n<p>You can also use a factory instead of the class name. This allows you to not have reflection and \ngives you more control over it's construction.</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">BindingRecyclerViewAdapterFactory</span> <span class=\"pl-c1\">MY_FACTORY</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BindingRecyclerViewAdapterFactory</span>() {\n  <span class=\"pl-k\">@Override</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">&lt;<span class=\"pl-smi\">T</span>&gt;</span> <span class=\"pl-k\">BindingRecyclerViewAdapter&lt;<span class=\"pl-smi\">T</span>&gt;</span> <span class=\"pl-en\">create</span>(<span class=\"pl-smi\">RecyclerView</span> <span class=\"pl-v\">recyclerView</span>, <span class=\"pl-k\">ItemViewArg&lt;<span class=\"pl-smi\">T</span>&gt;</span> <span class=\"pl-v\">arg</span>) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">MyRecyclerViewAdapter&lt;&gt;</span>(arg);\n  }\n}</pre></div>\n\n<div class=\"highlight highlight-text-xml\"><pre>&lt;<span class=\"pl-ent\">android</span>.support.v7.widget.RecyclerView\n  <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layoutManager</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{LayoutManagers.linear()}<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">items</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.items}<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">itemView</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{viewModel.itemView}<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-e\">app</span><span class=\"pl-e\">:</span><span class=\"pl-e\">adapter</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@{MY_FACTORY}<span class=\"pl-pds\">\"</span></span>/&gt;</pre></div>\n\n<h2><a id=\"user-content-known-issues\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#known-issues\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Known Issues</h2>\n\n<h3><a id=\"user-content-cannot-resolve-the-libraries-bindingadapters\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#cannot-resolve-the-libraries-bindingadapters\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Cannot Resolve the libraries <code>@BindingAdapter</code>'s</h3>\n\n<p>This is likely because you are using the <a href=\"https://bitbucket.org/hvisser/android-apt\">android-apt</a> \nplugin which <a href=\"https://bitbucket.org/hvisser/android-apt/issues/45/breaks-declaring-bindingadapter-in-a\">broke</a> \nthis in previous versions. Update to <code>1.6+</code> to fix it.</p>\n\n<h3><a id=\"user-content-views-adapter-is-null\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#views-adapter-is-null\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>View's adapter is null</h3>\n\n<p>If you attempt to retrieve an adapter from a view right after binding it you may find it is null.\nThis is because databinding waits for the next draw pass to run to batch up changes. You can force\nit to run immediately by calling <code>binding.executePendingBindings()</code>.</p>\n\n<h2><a id=\"user-content-license\" class=\"anchor\" href=\"https://github.com/evant/binding-collection-adapter#license\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>License</h2>\n\n<pre><code>Copyright 2015 Evan Tatarka\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>\n</article>\n  </div>",
      "type": "Android",
      "url": "https://github.com/evant/binding-collection-adapter",
      "who": "mthli"
    },
    {
      "desc": "\u5728ListView\u4e2d\u5b9e\u73b0\u65e5\u5386\u89c6\u56fe",
      "ganhuo_id": "573d2a896776591c9fd0cd77",
      "publishedAt": "2016-05-19T12:09:29.617000",
      "readability": "<div><article class=\"markdown-body entry-content\">\n\n<p><a href=\"https://github.com/traex/CalendarListview/blob/master/header.png\" target=\"_blank\"><img src=\"https://github.com/traex/CalendarListview/raw/master/header.png\" alt=\"CalendarListview\"></a></p>\n\n<p>CalendarListview provides a easy way to select dates with a calendar for API 10+. <a href=\"https://github.com/traex/CalendarListview/blob/master/sample/\">You can find a sample</a> that show how to add DatePickerView to your layout without customization. </p>\n\n<p><a href=\"https://github.com/traex/CalendarListview/blob/master/demo.gif\" target=\"_blank\"><img src=\"https://github.com/traex/CalendarListview/raw/master/demo.gif\" alt=\"CalendarListview GIF\"></a></p>\n\n<h3><a id=\"user-content-integration\" class=\"anchor\" href=\"https://github.com/traex/CalendarListview#integration\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Integration</h3>\n\n<p>The lib is available on Maven Central, you can find it with <a href=\"http://gradleplease.appspot.com/#calendarlistview\">Gradle, please</a></p>\n\n<div class=\"highlight highlight-text-xml\"><pre>dependencies {\n    compile 'com.github.traex.calendarlistview:library:1.2.3'\n}\n</pre></div>\n\n<h3><a id=\"user-content-usage\" class=\"anchor\" href=\"https://github.com/traex/CalendarListview#usage\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Usage</h3>\n\n<p>Declare a DayPickerView inside your layout XML file:</p>\n\n<div class=\"highlight highlight-text-xml\"><pre>  &lt;<span class=\"pl-ent\">com</span>.andexert.calendarlistview.library.DayPickerView\n         <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@+id/pickerView<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">calendar</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://schemas.android.com/apk/res-auto<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>/&gt;\n</pre></div>\n\n<p>Next, you have to implement <code>DatePickerController</code> in your Activity or your Fragment. You will have to set <code>getMaxYear</code> and <code>onDayOfMonthSelected</code>. The first one is the max year between the current one and this maxYear. The second one is called every time user selects a new date.</p>\n\n<div class=\"highlight highlight-source-java\"><pre>    @<span class=\"pl-smi\">Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">int</span> getMaxYear()\n    {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">2015</span>;\n    }\n\n    @<span class=\"pl-smi\">Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> onDayOfMonthSelected(<span class=\"pl-k\">int</span> year, <span class=\"pl-k\">int</span> month, <span class=\"pl-k\">int</span> day)\n    {\n        <span class=\"pl-smi\">Log</span><span class=\"pl-k\">.</span>e(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Day Selected<span class=\"pl-pds\">\"</span></span>, day <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> / <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> month <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> / <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> year);\n    }\n</pre></div>\n\n\n\n<h3><a id=\"user-content-customization\" class=\"anchor\" href=\"https://github.com/traex/CalendarListview#customization\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Customization</h3>\n\n<p>CalendarListview is fully customizable:</p>\n\n<ul>\n<li>app:colorCurrentDay [color def:#ff999999] --&gt; The current day is always in bold but you can change its color</li>\n<li>app:colorSelectedDayBackground [color def:#E75F49] --&gt; If you click on a day, a circle indicator or a rouded rectangle indicator will be draw.</li>\n<li>app:colorSelectedDayText [color def:#fff2f2f2] --&gt; This is the text color of a selected day</li>\n<li>app:colorPreviousDay [color def:#ff999999] --&gt; In the current month you can choose to have a specific color for the past days</li>\n<li>app:colorNormalDay [color def:#ff999999] --&gt; Default text color for a day</li>\n<li>app:colorMonthName [color def:#ff999999] --&gt; Month name and year text color</li>\n<li>app:colorDayName [color def:#ff999999] --&gt; Day name text color</li>\n<li>app:textSizeDay [dimension def:16sp] --&gt; Font size for numeric day</li>\n<li>app:textSizeMonth [dimension def:16sp] --&gt; Font size for month name</li>\n<li>app:textSizeDayName [dimension def:10sp] --&gt; Font size for day name</li>\n<li>app:headerMonthHeight [dimension def:50dip] --&gt; Height of month name</li>\n<li>app:drawRoundRect [boolean def:false] --&gt; Draw a rounded rectangle for selected days instead of a circle</li>\n<li>app:selectedDayRadius [dimension def:16dip] --&gt; Set radius if you use default circle indicator</li>\n<li>app:calendarHeight [dimension def:270dip] --&gt; Height of each month/row</li>\n<li>app:enablePreviousDay [boolean def:true] --&gt; Enable past days in current month</li>\n<li>app:currentDaySelected [boolean def:false] --&gt; Select current day by default</li>\n<li>app:firstMonth [enum def:-1] --&gt; Start listview at the specified month</li>\n<li>app:lastMonth [enum def:-1] --&gt; End listview at the specified month</li>\n</ul>\n\n<h3><a id=\"user-content-contact\" class=\"anchor\" href=\"https://github.com/traex/CalendarListview#contact\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Contact</h3>\n\n<p>You can reach me at <a href=\"https://plus.google.com/+RobinChutaux\">+RobinChutaux</a> or for technical support feel free to open an issue <a href=\"https://github.com/traex/CalendarListview/issues\">here</a> :)</p>\n\n<h3><a id=\"user-content-acknowledgements\" class=\"anchor\" href=\"https://github.com/traex/CalendarListview#acknowledgements\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Acknowledgements</h3>\n\n<p>Thanks to <a href=\"https://github.com/flavienlaurent\">Flavien Laurent</a> for his <a href=\"https://github.com/flavienlaurent/datetimepicker\">DateTimePicker</a>.</p>\n\n<h3><a id=\"user-content-mit-license\" class=\"anchor\" href=\"https://github.com/traex/CalendarListview#mit-license\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>MIT License</h3>\n\n<pre><code>    The MIT License (MIT)\n\n    Copyright (c) 2014 Robin Chutaux\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n</code></pre>\n</article>\n  </div>",
      "type": "Android",
      "url": "https://github.com/traex/CalendarListview",
      "who": "\u5927\u718a"
    },
    {
      "desc": "\u4e00\u4e2a\u6ecb\u74f7 Android RecyclerView, ListView, GridView, ScrollView ...\u7684scroll",
      "ganhuo_id": "56cc6d26421aa95caa707fa2",
      "publishedAt": "2015-12-10T04:13:03.804000",
      "readability": "<div><article class=\"markdown-body entry-content\"><h2><a id=\"user-content-over-scroll-support-for-androids-recyclerview-listview-gridview-scrollview-\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#over-scroll-support-for-androids-recyclerview-listview-gridview-scrollview-\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Over-Scroll Support For Android's RecyclerView, ListView, GridView, ScrollView ...</h2>\n\n<p>The library provides an iOS-like over-scrolling effect applicable over almost all Android native scrollable views. It is also built to allow for very easy adaptation to support custom views.</p>\n\n<p>The core effect classes are loose-<a href=\"https://en.wikipedia.org/wiki/Decorator_pattern\">decorators</a> of Android views, and are thus decoupled from the actual view classes' implementations. That allows developers to apply the effect over views while keeping them as untampered 'black-boxes'. Namely, it allows for keeping important optimizations such as view-recycling intact.</p>\n\n<p><a href=\"https://github.com/EverythingMe/overscroll-decor/blob/master/recyclerview_demo.gif\" target=\"_blank\"><img src=\"https://github.com/EverythingMe/overscroll-decor/raw/master/recyclerview_demo.gif\" alt=\"RecyclerView demo\"></a></p>\n\n<h2><a id=\"user-content-gradle-dependency\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#gradle-dependency\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Gradle Dependency</h2>\n\n<p>Add the following to your module's <code>build.gradle</code> file:</p>\n\n<div class=\"highlight highlight-source-groovy\"><pre>dependencies {\n    <span class=\"pl-c\">// ...</span>\n\n    compile <span class=\"pl-s\"><span class=\"pl-pds\">'</span>me.everything:overscroll-decor-android:1.0.2<span class=\"pl-pds\">'</span></span>\n}</pre></div>\n\n<h2><a id=\"user-content-usage\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#usage\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Usage</h2>\n\n<h3><a id=\"user-content-recyclerview\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#recyclerview\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>RecyclerView</h3>\n\n<p>Supports both linear and staggered-grid layout managers (i.e. all native Android layouts).\nCan be easily adapted to support custom layout managers.</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">RecyclerView</span> recyclerView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">RecyclerView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>recycler_view);\n\n<span class=\"pl-c\">// Horizontal</span>\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpOverScroll(recyclerView, <span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ORIENTATION_HORIZONTAL</span>);\n<span class=\"pl-c\">// Vertical</span>\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpOverScroll(recyclerView, <span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ORIENTATION_VERTICAL</span>);</pre></div>\n\n<h3><a id=\"user-content-recyclerview-with-items-swiping--dragging\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#recyclerview-with-items-swiping--dragging\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>RecyclerView with items swiping / dragging</h3>\n\n<p>See <em>Advanced Usage</em>.</p>\n\n<h3><a id=\"user-content-listview\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#listview\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>ListView</h3>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">ListView</span> listView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">ListView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>list_view);\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpOverScroll(listView);</pre></div>\n\n<h3><a id=\"user-content-gridview\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#gridview\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>GridView</h3>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">GridView</span> gridView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">GridView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>grid_view);\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpOverScroll(gridView);</pre></div>\n\n<h3><a id=\"user-content-scrollview-horizontalscrollview\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#scrollview-horizontalscrollview\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>ScrollView, HorizontalScrollView</h3>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">ScrollView</span> scrollView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">ScrollView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>scroll_view);\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpOverScroll(scrollView);\n\n<span class=\"pl-smi\">HorizontalScrollView</span> horizontalScrollView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">HorizontalScrollView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>horizontal_scroll_view);\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpOverScroll(horizontalScrollView);</pre></div>\n\n<h3><a id=\"user-content-any-view---text-image-always-over-scroll-ready\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#any-view---text-image-always-over-scroll-ready\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Any View - Text, Image... (Always Over-Scroll Ready)</h3>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">View</span> view <span class=\"pl-k\">=</span> fragmentView<span class=\"pl-k\">.</span>findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>demo_view);\n\n<span class=\"pl-c\">// Horizontal</span>\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpStaticOverScroll(view, <span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ORIENTATION_HORIZONTAL</span>);\n<span class=\"pl-c\">// Vertical</span>\n<span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpStaticOverScroll(view, <span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ORIENTATION_VERTICAL</span>);</pre></div>\n\n<h2><a id=\"user-content-advanced-usage\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#advanced-usage\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Advanced Usage</h2>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-c\">// Horizontal RecyclerView</span>\n<span class=\"pl-smi\">RecyclerView</span> recyclerView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">RecyclerView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>recycler_view);\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">HorizontalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RecyclerViewOverScrollDecorAdapter</span>(recyclerView));\n\n<span class=\"pl-c\">// ListView (vertical)</span>\n<span class=\"pl-smi\">ListView</span> listView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">ListView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>list_view);\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">AbsListViewOverScrollDecorAdapter</span>(listView));\n\n<span class=\"pl-c\">// GridView (vertical)</span>\n<span class=\"pl-smi\">GridView</span> gridView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">GridView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>grid_view);\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">AbsListViewOverScrollDecorAdapter</span>(gridView));\n\n<span class=\"pl-c\">// A simple TextView - horizontal</span>\n<span class=\"pl-smi\">View</span> textView <span class=\"pl-k\">=</span> findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>title);\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">HorizontalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">StaticOverScrollDecorAdapter</span>(view));</pre></div>\n\n<h3><a id=\"user-content-recyclerview-with-itemtouchhelper-based-swiping--dragging\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#recyclerview-with-itemtouchhelper-based-swiping--dragging\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>RecyclerView with <a href=\"http://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.html\">ItemTouchHelper</a> based swiping / dragging</h3>\n\n<p>As of version 1.0.1, the effect can work smoothly with the RecyclerView's built-in mechanism for items swiping and dragging (based on <a href=\"http://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.html\">ItemTouchHelper</a>). BUT, it requires some (very little) explicit configuration work:</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-c\">// Normally you would attach an ItemTouchHelper &amp; a callback to a RecyclerView, this way:</span>\n<span class=\"pl-smi\">RecyclerView</span> recyclerView <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">RecyclerView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>recycler_view);\n<span class=\"pl-smi\">ItemTouchHelper</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Callback</span> myCallback <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ItemTouchHelper</span>.<span class=\"pl-smi\">Callback</span>() {\n    <span class=\"pl-c1\">...</span>\n};\n<span class=\"pl-smi\">ItemTouchHelper</span> myHelper <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ItemTouchHelper</span>(myCallback);\nmyHelper<span class=\"pl-k\">.</span>attachToRecyclerView(recyclerView);\n\n<span class=\"pl-c\">// INSTEAD of attaching the helper yourself, simply use the dedicated adapter c'tor, e.g.:</span>\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RecyclerViewOverScrollDecorAdapter</span>(recyclerView, myCallback));\n</pre></div>\n\n<p>For more info on the swiping / dragging mechanism, try <a href=\"https://medium.com/@ipaulpro/drag-and-swipe-with-recyclerview-b9456d2b1aaf\">this useful tutorial</a>.</p>\n\n<h3><a id=\"user-content-over-scroll-listeners\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#over-scroll-listeners\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Over-Scroll Listeners</h3>\n\n<p>As of version 1.0.2, the effect provides a means for registering listeners of over-scroll related events. There are two types of listeners, as follows.</p>\n\n<h4><a id=\"user-content-state-change-listener\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#state-change-listener\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>State-Change Listener</h4>\n\n<p>The over-scroll manager dispatches events onto a state-change listener denoting transitions in the effect's state:</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-c\">// Note: over-scroll is set-up using the helper method.</span>\n<span class=\"pl-smi\">IOverScrollDecor</span> decor <span class=\"pl-k\">=</span> <span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-k\">.</span>setUpOverScroll(recyclerView, <span class=\"pl-smi\">OverScrollDecoratorHelper</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ORIENTATION_HORIZONTAL</span>);\n\ndecor<span class=\"pl-k\">.</span>setOverScrollStateListener(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">IOverScrollStateListener</span>() {\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">onOverScrollStateChange</span>(<span class=\"pl-smi\">IOverScrollDecor</span> <span class=\"pl-v\">decor</span>, <span class=\"pl-k\">int</span> <span class=\"pl-v\">oldState</span>, <span class=\"pl-k\">int</span> <span class=\"pl-v\">newState</span>) {\n        <span class=\"pl-k\">switch</span> (newState) {\n            <span class=\"pl-k\">case</span> <span class=\"pl-c1\">STATE_IDLE</span><span class=\"pl-k\">:</span>\n                <span class=\"pl-c\">// No over-scroll is in effect.</span>\n                <span class=\"pl-k\">break</span>;\n            <span class=\"pl-k\">case</span> <span class=\"pl-c1\">STATE_DRAG_START_SIDE</span><span class=\"pl-k\">:</span>\n                <span class=\"pl-c\">// Dragging started at the left-end.</span>\n                <span class=\"pl-k\">break</span>;\n            <span class=\"pl-k\">case</span> <span class=\"pl-c1\">STATE_DRAG_END_SIDE</span><span class=\"pl-k\">:</span>\n                <span class=\"pl-c\">// Dragging started at the right-end.</span>\n                <span class=\"pl-k\">break</span>;\n            <span class=\"pl-k\">case</span> <span class=\"pl-c1\">STATE_BOUNCE_BACK</span><span class=\"pl-k\">:</span>\n                <span class=\"pl-k\">if</span> (oldState <span class=\"pl-k\">==</span> <span class=\"pl-c1\">STATE_DRAG_START_SIDE</span>) {\n                    <span class=\"pl-c\">// Dragging stopped -- view is starting to bounce back from the *left-end* onto natural position.</span>\n                } <span class=\"pl-k\">else</span> { <span class=\"pl-c\">// i.e. (oldState == STATE_DRAG_END_SIDE)</span>\n                    <span class=\"pl-c\">// View is starting to bounce back from the *right-end*.</span>\n                }\n                <span class=\"pl-k\">break</span>;\n        }\n    }\n}</pre></div>\n\n<h4><a id=\"user-content-real-time-updates-listener\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#real-time-updates-listener\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Real-time Updates Listener</h4>\n\n<p>The over-scroll manager can also dispatch <em>real-time</em>, as-it-happens over-scroll events denoting the current offset resulting due to an over-scroll being in-effect (the offset thus denotes the current 'intensity').</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-c\">// Note: over-scroll is set-up by explicity instantiating a decorator rather than using the helper; The two methods can be used interchangeably for registering listeners.</span>\n<span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span> decor <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RecyclerViewOverScrollDecorAdapter</span>(recyclerView, itemTouchHelperCallback));\n\ndecor<span class=\"pl-k\">.</span>setOverScrollUpdateListener(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">IOverScrollUpdateListener</span>() {\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">onOverScrollUpdate</span>(<span class=\"pl-smi\">IOverScrollDecor</span> <span class=\"pl-v\">decor</span>, <span class=\"pl-k\">int</span> <span class=\"pl-v\">state</span>, <span class=\"pl-k\">float</span> <span class=\"pl-v\">offset</span>) {\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">View</span> view <span class=\"pl-k\">=</span> decor<span class=\"pl-k\">.</span>getView();\n        <span class=\"pl-k\">if</span> (offset <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {\n            <span class=\"pl-c\">// 'view' is currently being over-scrolled from the top.</span>\n        } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (offset <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0</span>) {\n            <span class=\"pl-c\">// 'view' is currently being over-scrolled from the bottom.</span>\n        } <span class=\"pl-k\">else</span> {\n            <span class=\"pl-c\">// No over-scroll is in-effect.</span>\n            <span class=\"pl-c\">// This is synonymous with having (state == STATE_IDLE).</span>\n        }\n    }\n});\n</pre></div>\n\n<p>The two type of listeners can be used either separately or in conjunction, depending on your needs. Refer to the demo project's RecyclerView-demo section for actual concrete usage.</p>\n\n<h3><a id=\"user-content-custom-views\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#custom-views\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Custom Views</h3>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">CustomView</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">View</span> {\n    <span class=\"pl-c\">// ...</span>\n}\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">CustomView</span> view <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">CustomView</span>) findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>custom_view);\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">IOverScrollDecoratorAdapter</span>() {\n\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">View</span> <span class=\"pl-en\">getView</span>() {\n        <span class=\"pl-k\">return</span> view;\n    }\n\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> <span class=\"pl-en\">isInAbsoluteStart</span>() {\n        <span class=\"pl-c\">// canScrollUp() is an example of a method you must implement</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">!</span>view<span class=\"pl-k\">.</span>canScrollUp();\n    }\n\n    <span class=\"pl-k\">@Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> <span class=\"pl-en\">isInAbsoluteEnd</span>() {\n         <span class=\"pl-c\">// canScrollDown() is an example of a method you must implement</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">!</span>view<span class=\"pl-k\">.</span>canScrollDown();\n    }\n});</pre></div>\n\n<h3><a id=\"user-content-effect-behavior-configuration\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#effect-behavior-configuration\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Effect Behavior Configuration</h3>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-c\">/// Make over-scroll applied over a list-view feel more 'stiff'</span>\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">AbsListViewOverScrollDecorAdapter</span>(view),\n        <span class=\"pl-c1\">5f</span>, <span class=\"pl-c\">// Default is 3</span>\n        <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_TOUCH_DRAG_MOVE_RATIO_BCK</span>,\n        <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_DECELERATE_FACTOR</span>);\n\n<span class=\"pl-c\">// Make over-scroll applied over a list-view bounce-back more softly</span>\n<span class=\"pl-k\">new</span> <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">AbsListViewOverScrollDecorAdapter</span>(view),\n        <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_TOUCH_DRAG_MOVE_RATIO_FWD</span>,\n        <span class=\"pl-smi\">VerticalOverScrollBounceEffectDecorator</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>DEFAULT_TOUCH_DRAG_MOVE_RATIO_BCK</span>,\n        <span class=\"pl-k\">-</span><span class=\"pl-c1\">1f</span> <span class=\"pl-c\">// Default is -2</span>\n        );\n</pre></div>\n\n<h2><a id=\"user-content-credits\" class=\"anchor\" href=\"https://github.com/EverythingMe/overscroll-decor#credits\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Credits</h2>\n\n<p>App icons by <a href=\"http://somerandomdude.com/work/iconic/\">P.J. Onori</a>,\n<a href=\"http://graphicriver.net/item/wirecons-vector-icons/4586710?ref=tmthymllr\">Timothy Miller</a>,\n<a href=\"http://icons4android.com\">Icons4Android</a>, \n<a href=\"http://icons8.com/android-icons\">Icons8.com</a></p>\n</article>\n  </div>",
      "type": "Android",
      "url": "https://github.com/EverythingMe/overscroll-decor",
      "who": "\u6709\u65f6\u653e\u7eb5"
    },
    {
      "desc": "\u4e0b\u62c9\u5237\u65b0\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a \u652f\u6301listview recyclerview gridview",
      "ganhuo_id": "56cc6d29421aa95caa708172",
      "publishedAt": "2016-01-15T04:30:14.281000",
      "readability": "<div><article class=\"markdown-body entry-content\">\n\n<p>Android widget with pull to refresh for all the views,and support loadMore for ListView,RecyclerView,GridView and SwipeRefreshLayout.</p>\n\n<p>&#x5728;<a href=\"https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh\">android-Ultra-Pull-To-Refresh</a>&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x589E;&#x52A0;&#x4E86;&#x52A0;&#x8F7D;&#x66F4;&#x591A;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x611F;&#x8C22;&#x4F5C;&#x8005;</p>\n\n<ul>\n<li>&#x4E0B;&#x62C9;&#x5237;&#x65B0;&#x652F;&#x6301;&#x5927;&#x90E8;&#x5206;<code>view</code>&#xFF1A;<code>ListView</code>&#x3001;<code>ScrollView</code>&#x3001;<code>WebView</code>&#x7B49;&#xFF0C;&#x751A;&#x81F3;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;<code>TextView</code></li>\n<li>&#x52A0;&#x8F7D;&#x66F4;&#x591A;&#x76EE;&#x524D;&#x652F;&#x6301;<code>ListView</code>&#x3001;<code>RecyclerView</code>&#x3001;<code>GridView</code>&#x3001;<code>SwipeRefreshLayout</code></li>\n<li>&#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;header&#x4EE5;&#x53CA;footer</li>\n<li>&#x589E;&#x52A0;SwipeRefreshLayout&#x5237;&#x65B0;&#x65B9;&#x5F0F;&#xFF0C;&#x540C;&#x6837;&#x652F;&#x6301;&#x52A0;&#x8F7D;&#x66F4;&#x591A;</li>\n</ul>\n\n<p><a href=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/CommonPullToRefresh_Demo.apk\">Demo APK&#x4E0B;&#x8F7D;</a></p>\n\n<div> <a href=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/main.png\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/main.png\" width=\"270px\"></a> </div>\n\n<h4><a id=\"user-content-listviewrecyclerview&#x622A;&#x56FE;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#listviewrecyclerview&#x622A;&#x56FE;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>ListView&#x3001;RecyclerView&#x622A;&#x56FE;</h4>\n\n<div> <a href=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/listview.gif\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/listview.gif\" width=\"270px\"></a>  <a href=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/recyclerview.gif\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/recyclerview.gif\" width=\"270px\"></a> </div>\n\n<h4><a id=\"user-content-gridview&#x622A;&#x56FE;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#gridview&#x622A;&#x56FE;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>GridView&#x622A;&#x56FE;</h4>\n\n<div> <a href=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/gridview.gif\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/gridview.gif\" width=\"270px\"></a> </div>\n\n<h4><a id=\"user-content-swiperefreshlayout&#x622A;&#x56FE;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#swiperefreshlayout&#x622A;&#x56FE;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>SwipeRefreshLayout&#x622A;&#x56FE;</h4>\n\n<div> <a href=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/swipeListview.gif\" target=\"_blank\"><img src=\"https://raw.githubusercontent.com/Chanven/CommonPullToRefresh/master/raw/swipeListview.gif\" width=\"270px\"></a> </div>\n\n\n\n<p>Gradle / Android Studio</p>\n\n<pre><code>compile 'com.chanven.lib:cptr:1.0.0'\n</code></pre>\n\n<h4><a id=\"user-content-&#x914D;&#x7F6E;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#&#x914D;&#x7F6E;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>&#x914D;&#x7F6E;</h4>\n\n<p>&#x6709;6&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x914D;&#x7F6E;:</p>\n\n<ul>\n<li><p>&#x963B;&#x5C3C;&#x7CFB;&#x6570;</p>\n\n<p>&#x9ED8;&#x8BA4;: <code>1.7f</code>&#xFF0C;&#x8D8A;&#x5927;&#xFF0C;&#x611F;&#x89C9;&#x4E0B;&#x62C9;&#x65F6;&#x8D8A;&#x5403;&#x529B;&#x3002;\n<code>mPtrFrame.setResistance(1.7f)</code></p></li>\n<li><p>&#x89E6;&#x53D1;&#x5237;&#x65B0;&#x65F6;&#x79FB;&#x52A8;&#x7684;&#x4F4D;&#x7F6E;&#x6BD4;&#x4F8B;</p>\n\n<p>&#x9ED8;&#x8BA4;&#xFF0C;<code>1.2f</code>&#xFF0C;&#x79FB;&#x52A8;&#x8FBE;&#x5230;&#x5934;&#x90E8;&#x9AD8;&#x5EA6;1.2&#x500D;&#x65F6;&#x53EF;&#x89E6;&#x53D1;&#x5237;&#x65B0;&#x64CD;&#x4F5C;&#x3002;\n<code>mPtrFrame.setRatioOfHeaderHeightToRefresh(1.2f)</code></p></li>\n<li><p>&#x56DE;&#x5F39;&#x5EF6;&#x65F6;</p>\n\n<p>&#x9ED8;&#x8BA4; <code>200ms</code>&#xFF0C;&#x56DE;&#x5F39;&#x5230;&#x5237;&#x65B0;&#x9AD8;&#x5EA6;&#x6240;&#x7528;&#x65F6;&#x95F4;&#x3002;\n<code>mPtrFrame.setDurationToClose(200)</code></p></li>\n<li><p>&#x5934;&#x90E8;&#x56DE;&#x5F39;&#x65F6;&#x95F4;</p>\n\n<p>&#x9ED8;&#x8BA4;<code>1000ms</code>&#x3002;\n<code>mPtrFrame.setDurationToCloseHeader(1000)</code></p></li>\n<li><p>&#x5237;&#x65B0;&#x662F;&#x4FDD;&#x6301;&#x5934;&#x90E8;</p>\n\n<p>&#x9ED8;&#x8BA4;&#x503C; <code>true</code>&#x3002;\n<code>mPtrFrame.setKeepHeaderWhenRefresh(true)</code></p></li>\n<li><p>&#x4E0B;&#x62C9;&#x5237;&#x65B0; / &#x91CA;&#x653E;&#x5237;&#x65B0;</p>\n\n<p>&#x9ED8;&#x8BA4;&#x4E3A;&#x91CA;&#x653E;&#x5237;&#x65B0;&#xFF0C;&#x5373;<code>false</code>&#x3002;\n<code>mPtrFrame.setPullToRefresh(false)</code></p></li>\n</ul>\n\n<h5><a id=\"user-content-&#x4E0A;&#x9762;&#x662F;&#x5728;java&#x4EE3;&#x7801;&#x4E2D;&#x914D;&#x7F6E;&#x4E5F;&#x53EF;&#x5728;xml&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#&#x4E0A;&#x9762;&#x662F;&#x5728;java&#x4EE3;&#x7801;&#x4E2D;&#x914D;&#x7F6E;&#x4E5F;&#x53EF;&#x5728;xml&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>&#x4E0A;&#x9762;&#x662F;&#x5728;<code>java</code>&#x4EE3;&#x7801;&#x4E2D;&#x914D;&#x7F6E;&#xFF0C;&#x4E5F;&#x53EF;&#x5728;<code>xml</code>&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;</h5>\n\n<div class=\"highlight highlight-text-xml\"><pre>&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>utf-8<span class=\"pl-pds\">\"</span></span>?&gt;\n&lt;<span class=\"pl-ent\">LinearLayout</span>\n    <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">android</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://schemas.android.com/apk/res/android<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">orientation</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>vertical<span class=\"pl-pds\">\"</span></span>&gt;\n\n    &lt;<span class=\"pl-ent\">com</span>.chanven.lib.cptr.PtrClassicFrameLayout\n        <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@+id/test_list_view_frame<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">cube_ptr</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://schemas.android.com/apk/res-auto<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">background</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>#f0f0f0<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">cube_ptr</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ptr_resistance</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.7<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">cube_ptr</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ptr_ratio_of_header_height_to_refresh</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.2<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">cube_ptr</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ptr_duration_to_close</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>200<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">cube_ptr</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ptr_duration_to_close_header</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1000<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">cube_ptr</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ptr_keep_header_when_refresh</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>true<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-e\">cube_ptr</span><span class=\"pl-e\">:</span><span class=\"pl-e\">ptr_pull_to_fresh</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>false<span class=\"pl-pds\">\"</span></span>&gt;\n\n        &lt;<span class=\"pl-ent\">ListView</span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@+id/test_list_view<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">layout_height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>match_parent<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">background</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@android:color/white<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">choiceMode</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>singleChoice<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">divider</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>#b0b0b0<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">dividerHeight</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0.1dp<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">fadingEdge</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>none<span class=\"pl-pds\">\"</span></span>\n            <span class=\"pl-e\">android</span><span class=\"pl-e\">:</span><span class=\"pl-e\">scrollbarStyle</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>outsideOverlay<span class=\"pl-pds\">\"</span></span>/&gt;\n    &lt;/<span class=\"pl-ent\">com</span>.chanven.lib.cptr.PtrClassicFrameLayout&gt;\n\n&lt;/<span class=\"pl-ent\">LinearLayout</span>&gt;</pre></div>\n\n<h4><a id=\"user-content-&#x5904;&#x7406;&#x5237;&#x65B0;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#&#x5904;&#x7406;&#x5237;&#x65B0;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>&#x5904;&#x7406;&#x5237;&#x65B0;</h4>\n\n<p>&#x901A;&#x8FC7;<code>PtrHandler</code>&#xFF0C;&#x53EF;&#x4EE5;&#x68C0;&#x67E5;&#x786E;&#x5B9A;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x4E0B;&#x6765;&#x5237;&#x65B0;&#x4EE5;&#x53CA;&#x5728;&#x5408;&#x9002;&#x7684;&#x65F6;&#x95F4;&#x5237;&#x65B0;&#x6570;&#x636E;&#x3002;</p>\n\n<p>&#x68C0;&#x67E5;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x4E0B;&#x62C9;&#x5237;&#x65B0;&#x5728;<code>PtrDefaultHandler.checkContentCanBePulledDown</code>&#x4E2D;&#x6709;&#x9ED8;&#x8BA4;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x5B8C;&#x6210;&#x8FD9;&#x4E2A;&#x903B;&#x8F91;&#x3002;</p>\n\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-en\">PtrHandler</span> {\n    <span class=\"pl-c\">/**</span>\n<span class=\"pl-c\">     * &#x68C0;&#x67E5;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x4E0B;&#x6765;&#x5237;&#x65B0;&#xFF0C;&#x6BD4;&#x5982;&#x5217;&#x8868;&#x4E3A;&#x7A7A;&#x6216;&#x8005;&#x5217;&#x8868;&#x7B2C;&#x4E00;&#x9879;&#x5728;&#x6700;&#x4E0A;&#x9762;&#x65F6;&#x3002;</span>\n<span class=\"pl-c\">     * &lt;p/&gt;</span>\n<span class=\"pl-c\">     * {@link com.chanven.lib.cptr.PtrDefaultHandler#checkContentCanBePulledDown}</span>\n<span class=\"pl-c\">     */</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> <span class=\"pl-en\">checkCanDoRefresh</span>(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">PtrFrameLayout</span> <span class=\"pl-v\">frame</span>, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">View</span> <span class=\"pl-v\">content</span>, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">View</span> <span class=\"pl-v\">header</span>);\n\n    <span class=\"pl-c\">/**</span>\n<span class=\"pl-c\">     * &#x9700;&#x8981;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#x65F6;&#x89E6;&#x53D1;</span>\n<span class=\"pl-c\">     *</span>\n<span class=\"pl-c\">     * @param frame</span>\n<span class=\"pl-c\">     */</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">onRefreshBegin</span>(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">PtrFrameLayout</span> <span class=\"pl-v\">frame</span>);\n}</pre></div>\n\n<h4><a id=\"user-content-headerfooter&#x6837;&#x5F0F;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#headerfooter&#x6837;&#x5F0F;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>Header&#x3001;Footer&#x6837;&#x5F0F;</h4>\n\n<ul>\n<li>Header    &#x5B9E;&#x73B0;&#x63A5;&#x53E3;<code>PtrUIHandler</code>&#xFF0C;&#x5DF2;&#x6709;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;<code>PtrClassicDefaultHeader</code></li>\n<li>Footer    &#x5B9E;&#x73B0;&#x63A5;&#x53E3;<code>ILoadViewMoreFactory</code>&#xFF0C;&#x5DF2;&#x6709;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;<code>DefaultLoadMoreFooter</code></li>\n</ul>\n\n<h2><a id=\"user-content-&#x5E38;&#x89C1;&#x95EE;&#x9898;\" class=\"anchor\" href=\"https://github.com/Chanven/CommonPullToRefresh#&#x5E38;&#x89C1;&#x95EE;&#x9898;\"><svg class=\"octicon octicon-link\" height=\"16\" width=\"16\"><path></path></svg></a>&#x5E38;&#x89C1;&#x95EE;&#x9898;</h2>\n\n<ul>\n<li> ViewPager&#x6ED1;&#x52A8;&#x51B2;&#x7A81;: <code>disableWhenHorizontalMove()</code></li>\n<li> &#x957F;&#x6309;LongPressed, <code>setInterceptEventWhileWorking()</code></li>\n<li><p>&#x5982;&#x679C;&#x8981;&#x7981;&#x7528;&#x4E0B;&#x62C9;&#x5237;&#x65B0;&#xFF0C;&#x5219;&#x66F4;&#x6539;<code>PtrHandler.checkCanDoRefresh</code>&#x7684;&#x8FD4;&#x56DE;&#x5B9E;&#x73B0;&#x5373;&#x53EF;</p>\n\n<p>&#x5177;&#x4F53;&#x6817;&#x5B50;&#x53EF;&#x53C2;&#x8003;Demo</p></li>\n</ul>\n</article>\n  </div>",
      "type": "Android",
      "url": "https://github.com/Chanven/CommonPullToRefresh",
      "who": "Jason"
    },
    {
      "desc": "\u5728\u6eda\u52a8\u5217\u8868\u4e2d\u5b9e\u73b0\u89c6\u9891\u7684\u64ad\u653e(ListView & RecyclerView)",
      "ganhuo_id": "56cc6d29421aa95caa70824f",
      "publishedAt": "2016-02-02T03:57:06.971000",
      "readability": "<div><div class=\"arc_body\"> \n\t\t\t\t\t \n\t\t\t\t\t \n<p><strong>&#x82F1;&#x6587;&#x539F;&#x6587;&#xFF1A;</strong><a href=\"https://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.nf690powa\" target=\"_self\">Implementing video playback in a scrolled list (ListView &amp; RecyclerView)</a>&#xA0;</p><p>&#x672C;&#x6587;&#x5C06;&#x8BB2;&#x89E3;&#x5982;&#x4F55;&#x5728;&#x5217;&#x8868;&#x4E2D;&#x5B9E;&#x73B0;&#x89C6;&#x9891;&#x64AD;&#x653E;&#x3002;&#x7C7B;&#x4F3C;&#x4E8E;&#x8BF8;&#x5982; Facebook, Instagram &#x6216;&#x8005; Magisto&#x8FD9;&#x4E9B;&#x70ED;&#x95E8;&#x5E94;&#x7528;&#x7684;&#x6548;&#x679C;:</p><h4><strong>Facebook:</strong></h4><p><span class=\"md-image md-img-loaded\"><img src=\"https://cdn-images-1.medium.com/max/800/1*vizszEHcRhlK1MV7nrMSWw.gif\" alt=\"\"></span></p><h4><strong>Magisto:</strong></h4><p><span class=\"md-image md-img-loaded\"><img src=\"https://cdn-images-1.medium.com/max/800/1*9TcSE9YEENQNIcqCT7d2ww.gif\" alt=\"\"></span></p>   <h4><strong>Instagram:</strong></h4><p class=\"\"><span class=\"md-image md-img-loaded\"><img src=\"https://cdn-images-1.medium.com/max/800/1*3Lpr8C613ZfgazADX9eKyQ.gif\" alt=\"\"></span></p><p>&#x8FD9;&#x7247;&#x6587;&#x7AE0;&#x57FA;&#x4E8E;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#xFF1A;&#xA0;<a href=\"https://github.com/danylovolokh/VideoPlayerManager\">VideoPlayerManager</a>&#x3002;</p><p>&#x6240;&#x6709;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x793A;&#x4F8B;&#x90FD;&#x5728;&#x90A3;&#x91CC;&#x3002;&#x672C;&#x6587;&#x5C06;&#x8DF3;&#x8FC7;&#x8BB8;&#x591A;&#x4E1C;&#x897F;&#x3002;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x4F60;&#x8981;&#x771F;&#x6B63;&#x7406;&#x89E3;&#x5B83;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x6700;&#x597D;&#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#xFF0C;&#x5E76;&#x7ED3;&#x5408;&#x6E90;&#x4EE3;&#x7801;&#x4E00;&#x8D77;&#x9605;&#x8BFB;&#x672C;&#x6587;&#x3002;&#x4F46;&#x662F;&#x5373;&#x4FBF;&#x662F;&#x6CA1;&#x6709;&#x770B;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x672C;&#x6587;&#x4E5F;&#x80FD;&#x5E2E;&#x52A9;&#x4F60;&#x7406;&#x89E3;&#x6211;&#x4EEC;&#x5728;&#x5E72;&#x4EC0;&#x4E48;&#x3002;</p><h4>&#x4E24;&#x4E2A;&#x95EE;&#x9898;</h4><p>&#x8981;&#x5B9E;&#x73B0;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;</p><ol class=\" list-paddingleft-2\"><li><p>&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7BA1;&#x7406;&#x89C6;&#x9891;&#x7684;&#x64AD;&#x653E;&#x3002;&#x5728;&#x5B89;&#x5353;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x548C;SurfaceView &#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#x7684;MediaPlayer.class &#x7C7B;&#x53EF;&#x4EE5;&#x64AD;&#x653E;&#x89C6;&#x9891;&#x3002;&#x4F46;&#x662F;&#x5B83;&#x6709;&#x8BB8;&#x591A;&#x7F3A;&#x9677;&#x3002;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x5728;&#x5217;&#x8868;&#x4E2D;&#x4F7F;&#x7528;&#x666E;&#x901A;&#x7684;VideoView &#x3002;VideoView &#x7EE7;&#x627F;&#x81EA;SurfaceView&#xFF0C;&#x800C;SurfaceView&#x5E76;&#x6CA1;&#x6709;UI&#x540C;&#x6B65;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x8FD9;&#x5C31;&#x5BFC;&#x81F4;&#x4E86;&#x5728;&#x5217;&#x8868;&#x6EDA;&#x52A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6B63;&#x5728;&#x64AD;&#x653E;&#x7684;&#x89C6;&#x9891;&#x9700;&#x8981;&#x8DDF;&#x4E0A;&#x6EDA;&#x52A8;&#x7684;&#x6B65;&#x4F10;&#x3002;TextureView &#x4E2D;&#x6709;&#x540C;&#x6B65;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x4F46;&#x662F;&#x5728;Android SDK version 15 &#x4E2D;&#x6CA1;&#x6709;&#x57FA;&#x4E8E;TextureView &#x7684;VideoView&#x3002;<strong>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7EE7;&#x627F;&#x81EA;TextureView &#x5E76;&#x548C;Android MediaPlayer&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#x7684;View</strong>&#x3002;&#x51E0;&#x4E4E;&#x6240;&#x6709;MediaPlayer&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF08;prepare, start, stop &#x7B49;&#x7B49;&#x2026;&#xFF09;&#x90FD;&#x8C03;&#x7528;&#x548C;&#x786C;&#x4EF6;&#x76F8;&#x5173;&#x7684;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x3002;&#x5F53;&#x505A;&#x4E86;&#x957F;&#x4E8E;16ms&#x7684;&#x5DE5;&#x4F5C;&#x65F6;&#xFF08;&#x5FC5;&#x7136;&#x4F1A;&#xFF09;&#xFF0C;&#x786C;&#x4EF6;&#x4F1A;&#x975E;&#x5E38;&#x68D8;&#x624B;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x770B;&#x5230;&#x4E00;&#x4E2A;&#x5361;&#x987F;&#x7684;&#x5217;&#x8868;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4ECE;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;&#x5B83;&#x4EEC;&#x3002;</p></li><li><p>&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x77E5;&#x9053;&#x6EDA;&#x52A8;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x54EA;&#x4E2A;View&#x5F53;&#x524D;&#x5904;&#x4E8E;&#x6D3B;&#x52A8;&#x72B6;&#x6001;&#x4EE5;&#x5207;&#x6362;&#x64AD;&#x653E;&#x7684;&#x89C6;&#x9891;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8DDF;&#x8E2A;&#x6EDA;&#x52A8;&#x5E76;&#x5B9A;&#x4E49;&#x53EF;&#x89C6;&#x8303;&#x56F4;&#x6700;&#x5927;&#x7684;view&#x3002;</p></li></ol><h4>&#x7BA1;&#x7406;&#x89C6;&#x9891;&#x64AD;&#x653E;</h4><p>&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x662F;&#x63D0;&#x4F9B;&#x4EE5;&#x4E0B;&#x529F;&#x80FD;&#xFF1A;</p><p>&#x5047;&#x8BBE;&#x89C6;&#x9891;&#x6B63;&#x5728;&#x64AD;&#x653E;&#x3002;&#x7528;&#x6237;&#x6EDA;&#x52A8;&#x5217;&#x8868;&#xFF0C;&#x4E00;&#x4E2A;&#x65B0;&#x7684;item&#x66FF;&#x4EE3;&#x6B63;&#x5728;&#x64AD;&#x653E;&#x7684;item&#x6210;&#x4E3A;&#x53EF;&#x89C6;&#x8303;&#x56F4;&#x6700;&#x5927;&#x7684;view&#x3002;&#x90A3;&#x4E48;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x505C;&#x6B62;&#x5F53;&#x524D;&#x89C6;&#x9891;&#x7684;&#x64AD;&#x653E;&#x5E76;&#x5F00;&#x59CB;&#x65B0;&#x7684;&#x89C6;&#x9891;&#x3002;</p><p>&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x5C31;&#x662F;&#xFF1A;<strong>&#x505C;&#x6B62;&#x524D;&#x4E00;&#x4E2A;&#x64AD;&#x653E;&#xFF0C;&#x5E76;&#x4EC5;&#x5728;&#x65E7;&#x7684;&#x64AD;&#x653E;&#x505C;&#x6B62;&#x4E4B;&#x540E;&#x624D;&#x5F00;&#x59CB;&#x65B0;&#x7684;&#x64AD;&#x653E;</strong>&#x3002;</p><p><span class=\"\">&#x4EE5;&#x4E0B;&#x662F;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;&#x5F53;&#x4F60;&#x6309;&#x4E0B;&#x89C6;&#x9891;&#x7684;&#x7F29;&#x7565;&#x56FE;&#xFF0D;&#x5F53;&#x524D;&#x64AD;&#x653E;&#x7684;&#x89C6;&#x9891;&#x505C;&#x6B62;&#x64AD;&#x653E;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x89C6;&#x9891;&#x5F00;&#x59CB;&#x64AD;&#x653E;&#x3002;</span></p><p><span class=\"md-image md-img-loaded\"><img src=\"https://cdn-images-1.medium.com/max/800/1*V7cAiFeKurRMTLbZTQtLkA.gif\" alt=\"\"></span></p><h4>VideoPlayerView</h4><p>&#x6211;&#x4EEC;&#x8981;&#x505A;&#x7684;&#x7B2C;&#x4E00;&#x4EF6;&#x4E8B;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x57FA;&#x4E8E;TextureView&#x7684;VideoView &#x3002;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x5728;&#x6EDA;&#x52A8;&#x5217;&#x8868;&#x4E2D;&#x4F7F;&#x7528;VideoView &#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x5728;&#x64AD;&#x653E;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x7528;&#x6237;&#x6EDA;&#x52A8;&#x4E86;&#x5217;&#x8868;&#xFF0C;&#x89C6;&#x9891;&#x7684;&#x6E32;&#x67D3;&#x4F1A;&#x6DF7;&#x4E71;&#x3002;</p><p>&#x6211;&#x5C06;&#x628A;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x5206;&#x4E3A;&#x51E0;&#x90E8;&#x5206;&#xFF1A;</p><p>1.&#x521B;&#x5EFA;&#x4E00;&#x4E2A;ScalableTextureView&#xFF0C;&#x5B83;&#x662F;TextureView &#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x540C;&#x65F6;&#x5B83;&#x8FD8;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8C03;&#x6574;SurfaceTexture &#xFF08;&#x89C6;&#x9891;&#x7684;&#x64AD;&#x653E;&#x5C31;&#x662F;&#x8FD0;&#x884C;&#x5728;SurfaceTexture &#x4E0A;&#xFF09;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x51E0;&#x4E2A;&#x7C7B;&#x4F3C;&#x4E8E;ImageView scaleType&#x7684;&#x9009;&#x9879;&#x3002;</p><pre class=\"brush:js;toolbar:false\">public&#xA0;enum&#xA0;ScaleType&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;CENTER_CROP,&#xA0;TOP,&#xA0;BOTTOM,&#xA0;FILL\n}</pre><p>2.&#x521B;&#x5EFA;&#x4E00;&#x4E2A;VideoPlayerView&#xFF0C;&#x5B83;&#x662F;ScalableTextureView &#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x542B;&#x6709;&#x8DDF;MediaPlayer.class&#x76F8;&#x5173;&#x7684;&#x6240;&#x6709;&#x529F;&#x80FD;&#x3002;&#x8FD9;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;view&#x5C01;&#x88C5;&#x4E86;MediaPlayer.class&#x5E76;&#x63D0;&#x4F9B;&#x4E86;&#x548C;VideoView&#x5341;&#x5206;&#x7C7B;&#x4F3C;&#x7684;API&#x3002;&#x5B83;&#x5177;&#x6709;MediaPlayer&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#xFF1A;setDataSource, prepare, start, stop, pause, reset, release&#x3002;</p><h4>Video Player Manager and Messages Handler Thread</h4><p>Video Playback Manager&#x548C; MessagesHandlerThread &#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#xFF0C;&#x8D1F;&#x8D23;&#x8C03;&#x7528;MediaPlayer&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x5355;&#x72EC;&#x7684;&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;&#x4F8B;&#x5982;prepare(), start()&#x7B49;&#x8FD9;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x76F4;&#x63A5;&#x548C;&#x8BBE;&#x5907;&#x7684;&#x786C;&#x4EF6;&#x5173;&#x8054;&#x3002;&#x6211;&#x4EEC;&#x4E5F;&#x505A;&#x8FC7;&#x5728;UI&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;MediaPlayer.reset()&#xFF0C;&#x4F46;&#x662F;player&#x51FA;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x5BF9;UI&#x7EBF;&#x7A0B;&#x7684;&#x963B;&#x585E;&#x51E0;&#x4E4E;&#x6709;4&#x5206;&#x949F;&#xFF01;&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x4E0D;&#x5FC5;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x7684;MediaPlayer.prepareAsync&#xFF0C;&#x800C;&#x4F7F;&#x7528;&#x540C;&#x6B65;&#x7684;MediaPlayer.prepare&#x3002;&#x6211;&#x4EEC;&#x8BA9;&#x6BCF;&#x4EF6;&#x4E8B;&#x60C5;&#x90FD;&#x5728;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x7EBF;&#x7A0B;&#x91CC;&#x505A;&#x3002;</p><p>&#x81F3;&#x4E8E;&#x5F00;&#x59CB;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x64AD;&#x653E;&#x7684;&#x6D41;&#x7A0B;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;MediaPlayer&#x8981;&#x505A;&#x7684;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;</p><ol class=\" list-paddingleft-2\"><li><p>&#x505C;&#x6B62;&#x524D;&#x4E00;&#x4E2A;&#x64AD;&#x653E;&#x3002;&#x8C03;&#x7528;MediaPlayer.stop() &#x65B9;&#x6CD5;&#x6765;&#x5B8C;&#x6210;&#x3002;</p></li><li><p>&#x8C03;&#x7528;MediaPlayer.reset()&#x65B9;&#x6CD5;&#x6765;&#x91CD;&#x8BBE;MediaPlayer &#x3002;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#x539F;&#x56E0;&#x662F;&#x5728;&#x6EDA;&#x52A8;&#x5217;&#x8868;&#x4E2D;&#xFF0C;view&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x91CD;&#x7528;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x6240;&#x6709;&#x7684;&#x8D44;&#x6E90;&#x90FD;&#x80FD;&#x88AB;&#x91CA;&#x653E;&#x3002;</p></li><li><p>&#x8C03;&#x7528;MediaPlayer.release() &#x65B9;&#x6CD5;&#x6765;&#x91CA;&#x653E;MediaPlayer</p></li><li><p>&#x6E05;&#x9664;MediaPlayer&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x5F53;&#x5E94;&#x8BE5;&#x64AD;&#x653E;&#x65B0;&#x7684;&#x89C6;&#x9891;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x65B0;&#x7684;MediaPlayer&#x5B9E;&#x4F8B;&#x5C06;&#x88AB;&#x521B;&#x5EFA;&#x3002;</p></li><li><p>&#x4E3A;&#x53EF;&#x89C6;&#x8303;&#x56F4;&#x6700;&#x5927;&#x7684;view&#x521B;&#x5EFA;MediaPlayer&#x5B9E;&#x4F8B;&#x3002;</p></li><li><p>&#x8C03;&#x7528;MediaPlayer.setDataSource(String url)&#x6765;&#x4E3A;&#x65B0;&#x7684;MediaPlayer &#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x6E90;&#x3002;</p></li><li><p>&#x8C03;&#x7528;MediaPlayer.prepare()&#xFF0C;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x8C03;&#x7528;&#x5F02;&#x6B65;&#x7684;MediaPlayer.prepareAsync()&#x3002;</p></li><li><p>&#x8C03;&#x7528;MediaPlayer.start()</p></li><li><p>&#x7B49;&#x5F85;&#x5B9E;&#x9645;&#x7684;&#x89C6;&#x9891;&#x5F00;&#x59CB;&#x3002;</p></li></ol><p>&#x6240;&#x6709;&#x7684;&#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#x90FD;&#x88AB;&#x5C01;&#x88C5;&#x5728;&#x4E86;&#x5728;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7EBF;&#x7A0B;&#x4E2D;&#x5904;&#x7406;&#x7684;Message&#x91CC;&#x9762;&#xFF0C;&#x5047;&#x5982;&#x8FD9;&#x662F;Stop message&#xFF0C;&#x5C06;&#x8C03;&#x7528;VideoPlayerView.stop()&#xFF0C;&#x800C;&#x5B83;&#x6700;&#x7EC8;&#x8C03;&#x7528;&#x7684;&#x662F;MediaPlayer.stop()&#x3002;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#x7684;messages&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x80FD;&#x8BBE;&#x7F6E;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x5B83;&#x662F;&#x6B63;&#x5728;&#x505C;&#x6B62;&#x8FD8;&#x662F;&#x5DF2;&#x7ECF;&#x505C;&#x6B62;&#x6216;&#x8005;&#x5176;&#x5B83;&#x72B6;&#x6001;&#x3002;&#x5B83;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x63A7;&#x5236;&#x5F53;&#x524D;&#x5904;&#x7406;&#x7684;&#x662F;&#x4EC0;&#x4E48;message&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5BF9;&#x5B83;&#x505A;&#x70B9;&#x4EC0;&#x4E48;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&#x5F00;&#x59CB;&#x65B0;&#x7684;&#x64AD;&#x653E;&#x3002;</p><pre class=\"brush:js;toolbar:false\">/**\n&#xA0;*&#xA0;This&#xA0;PlayerMessage&#xA0;calls&#xA0;{@link&#xA0;MediaPlayer#stop()}&#xA0;on&#xA0;the&#xA0;instance&#xA0;that&#xA0;is&#xA0;used&#xA0;inside&#xA0;{@link&#xA0;VideoPlayerView}\n&#xA0;*/\npublic&#xA0;class&#xA0;Stop&#xA0;extends&#xA0;PlayerMessage&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;public&#xA0;Stop(VideoPlayerView&#xA0;videoView,&#xA0;VideoPlayerManagerCallback&#xA0;callback)&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;super(videoView,&#xA0;callback);\n&#xA0;&#xA0;&#xA0;&#xA0;}\n\n&#xA0;&#xA0;&#xA0;&#xA0;@Override\n&#xA0;&#xA0;&#xA0;&#xA0;protected&#xA0;void&#xA0;performAction(VideoPlayerView&#xA0;currentPlayer)&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;currentPlayer.stop();\n&#xA0;&#xA0;&#xA0;&#xA0;}\n\n&#xA0;&#xA0;&#xA0;&#xA0;@Override\n&#xA0;&#xA0;&#xA0;&#xA0;protected&#xA0;PlayerMessageState&#xA0;stateBefore()&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;PlayerMessageState.STOPPING;\n&#xA0;&#xA0;&#xA0;&#xA0;}\n\n&#xA0;&#xA0;&#xA0;&#xA0;@Override\n&#xA0;&#xA0;&#xA0;&#xA0;protected&#xA0;PlayerMessageState&#xA0;stateAfter()&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;PlayerMessageState.STOPPED;\n&#xA0;&#xA0;&#xA0;&#xA0;}\n}</pre><p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5F00;&#x59CB;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x64AD;&#x653E;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8C03;&#x7528;VideoPlayerManager&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x5B83;&#x5411;MessagesHandlerThread&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x5982;&#x4E0B;&#x6D88;&#x606F;&#x7EC4;&#x5408;&#x3002;</p><pre class=\"brush:js;toolbar:false\">//&#xA0;pause&#xA0;the&#xA0;queue&#xA0;processing&#xA0;and&#xA0;check&#xA0;current&#xA0;state\n//&#xA0;if&#xA0;current&#xA0;state&#xA0;is&#xA0;\"started\"&#xA0;then&#xA0;stop&#xA0;old&#xA0;playback\nmPlayerHandler.addMessage(new&#xA0;Stop(mCurrentPlayer,&#xA0;this));\nmPlayerHandler.addMessage(new&#xA0;Reset(mCurrentPlayer,&#xA0;this));\nmPlayerHandler.addMessage(new&#xA0;Release(mCurrentPlayer,&#xA0;this));\nmPlayerHandler.addMessage(new&#xA0;ClearPlayerInstance(mCurrentPlayer,&#xA0;this));//&#xA0;set&#xA0;new&#xA0;video&#xA0;player&#xA0;view\nmPlayerHandler.addMessage(new&#xA0;SetNewViewForPlayback(newVideoPlayerView,&#xA0;this));\n//&#xA0;start&#xA0;new&#xA0;playback\nmPlayerHandler.addMessages(Arrays.asList(\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;new&#xA0;CreateNewPlayerInstance(videoPlayerView,&#xA0;this),\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;new&#xA0;SetAssetsDataSourceMessage(videoPlayerView,&#xA0;assetFileDescriptor,&#xA0;this),&#xA0;//&#xA0;I&#xA0;use&#xA0;local&#xA0;file&#xA0;for&#xA0;demo\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;new&#xA0;Prepare(videoPlayerView,&#xA0;this),\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;new&#xA0;Start(videoPlayerView,&#xA0;this)\n));\n//&#xA0;resume&#xA0;queue&#xA0;processing</pre><p>&#x6D88;&#x606F;&#x7684;&#x8FD0;&#x884C;&#x662F;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x610F;&#x65F6;&#x523B;&#x6682;&#x505C;&#x961F;&#x5217;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p><p>&#x5F53;&#x524D;&#x7684;&#x89C6;&#x9891;&#x5904;&#x4E8E;&#x51C6;&#x5907;&#x72B6;&#x6001;(MedaiPlayer.prepare()&#x88AB;&#x8C03;&#x7528;&#xFF0C; MediaPlayer.start() &#x5728;&#x961F;&#x5217;&#x4E2D;&#x7B49;&#x5F85;) &#xFF0C;&#x7528;&#x6237;&#x6EDA;&#x52A8;&#x522B;&#x8868;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x4E00;&#x4E2A;&#x65B0;&#x7684;view&#x4E0A;&#x5F00;&#x59CB;&#x64AD;&#x653E;&#x89C6;&#x9891;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#xFF1A;</p><ol class=\" list-paddingleft-2\"><li><p>&#x6682;&#x505C;&#x961F;&#x5217;&#x7684;&#x5904;&#x7406;</p></li><li><p>&#x79FB;&#x9664;&#x6240;&#x6709;&#x6302;&#x8D77;&#x7684;&#x6D88;&#x606F;</p></li><li><p>&#x628A;&#x201C;Stop&#x201D;, &#x201C;Reset&#x201D;, &#x201C;Release&#x201D;, &#x201C;Clear Player instance&#x201D; &#x53D1;&#x9001;&#x5230;&#x961F;&#x5217;&#x3002;&#x5B83;&#x4EEC;&#x5C06;&#x5728;&#x6211;&#x4EEC;&#x4ECE;&#x201C;Prepare&#x201D;&#x8FD4;&#x56DE;&#x7684;&#x65F6;&#x5019;&#x7ACB;&#x5373;&#x88AB;&#x8C03;&#x7528;&#x3002;</p></li><li><p>&#x53D1;&#x9001; &#x201C;Create new Media Player instance&#x201D;, &#x201C;Set Current Media Player&#x201D;(&#x8FD9;&#x4E2A;&#x6D88;&#x606F;&#x6539;&#x53D8;&#x6267;&#x884C;messages&#x7684;MediaPlayer&#x5BF9;&#x8C61;), &#x201C;Set data source&#x201D;, &#x201C;Prepare&#x201D;, &#x201C;Start&#x201D;&#x6D88;&#x606F;&#x3002;&#x8FD9;&#x4E9B;&#x6D88;&#x606F;&#x5C06;&#x5728;&#x65B0;&#x7684;view&#x4E0A;&#x5F00;&#x59CB;&#x89C6;&#x9891;&#x7684;&#x64AD;&#x653E;&#x3002;</p></li></ol><p>&#x597D;&#x4E86;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x6709;&#x4E86;&#x6309;&#x7167;&#x6211;&#x4EEC;&#x9700;&#x6C42;&#x8FD0;&#x884C;&#x89C6;&#x9891;&#x64AD;&#x653E;&#x7684;&#x5DE5;&#x5177;&#xFF1A;&#x505C;&#x6B62;&#x524D;&#x4E00;&#x4E2A;&#x64AD;&#x653E;&#x7136;&#x540E;&#x663E;&#x793A;&#x4E0B;&#x4E00;&#x4E2A;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x662F;library&#x7684;gradle &#x4F9D;&#x8D56;&#xFF1A;</p><pre class=\"brush:js;toolbar:false\">dependencies&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;compile&#xA0;'com.github.danylovolokh:video-player-manager:0.2.0'\n}</pre><h4>&#x8BC6;&#x522B;list&#x4E2D;&#x53EF;&#x89C1;&#x8303;&#x56F4;&#x6700;&#x5927;&#x7684;view.List Visibility Utils</h4><p>&#x7B2C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#x7BA1;&#x7406;&#x89C6;&#x9891;&#x7684;&#x64AD;&#x653E;&#x95EE;&#x9898;&#x3002;&#x7B2C;&#x4E8C;&#x4E2A;&#x95EE;&#x9898;&#x5219;&#x662F;&#x8DDF;&#x8E2A;&#x54EA;&#x4E2A;item&#x7684;&#x53EF;&#x89C1;&#x8303;&#x56F4;&#x6700;&#x5927;&#x5E76;&#x628A;&#x64AD;&#x653E;&#x5207;&#x6362;&#x5230;&#x90A3;&#x4E2A;view&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x53EB;ListItemsVisibilityCalculator &#x7684;&#x63A5;&#x53E3;&#x548C;&#x5B83;&#x7684;&#x5B9E;&#x73B0;SingleListViewItemActiveCalculator &#x5C31;&#x662F;&#x505A;&#x8FD9;&#x4E2A;&#x5DE5;&#x4F5C;&#x7684;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x8BA1;&#x7B97;&#x5217;&#x8868;&#x4E2D;item&#x7684;&#x53EF;&#x89C1;&#x5EA6;&#xFF0C;adapter&#x4E2D;&#x4F7F;&#x7528;&#x7684;model class&#x5FC5;&#x987B;&#x5B9E;&#x73B0;ListItem interface &#x3002;</p><pre class=\"brush:js;toolbar:false\">/**\n&#xA0;*&#xA0;A&#xA0;general&#xA0;interface&#xA0;for&#xA0;list&#xA0;items.\n&#xA0;*&#xA0;This&#xA0;interface&#xA0;is&#xA0;used&#xA0;by&#xA0;{@link&#xA0;ListItemsVisibilityCalculator}\n&#xA0;*\n&#xA0;*&#xA0;@author&#xA0;danylo.volokh\n&#xA0;*/\npublic&#xA0;interface&#xA0;ListItem&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;/**\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;When&#xA0;this&#xA0;method&#xA0;is&#xA0;called,&#xA0;the&#xA0;implementation&#xA0;should&#xA0;provide&#xA0;a\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;visibility&#xA0;percents&#xA0;in&#xA0;range&#xA0;0&#xA0;-&#xA0;100&#xA0;%\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;@param&#xA0;view&#xA0;the&#xA0;view&#xA0;which&#xA0;visibility&#xA0;percent&#xA0;should&#xA0;be\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;calculated.\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;Note:&#xA0;visibility&#xA0;doesn't&#xA0;have&#xA0;to&#xA0;depend&#xA0;on&#xA0;the&#xA0;visibility&#xA0;of&#xA0;a\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;full&#xA0;view.&#xA0;\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;It&#xA0;might&#xA0;be&#xA0;calculated&#xA0;by&#xA0;calculating&#xA0;the&#xA0;visibility&#xA0;of&#xA0;any\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;inner&#xA0;View\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;@return&#xA0;percents&#xA0;of&#xA0;visibility\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*/\n&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;getVisibilityPercents(View&#xA0;view);\n\n&#xA0;&#xA0;&#xA0;&#xA0;/**\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;When&#xA0;view&#xA0;visibility&#xA0;become&#xA0;bigger&#xA0;than&#xA0;\"current&#xA0;active\"&#xA0;view\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;visibility&#xA0;then&#xA0;the&#xA0;new&#xA0;view&#xA0;becomes&#xA0;active.\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;This&#xA0;method&#xA0;is&#xA0;called\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*/\n&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;setActive(View&#xA0;newActiveView,&#xA0;int&#xA0;newActiveViewPosition);\n\n&#xA0;&#xA0;&#xA0;&#xA0;/**\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;There&#xA0;might&#xA0;be&#xA0;a&#xA0;case&#xA0;when&#xA0;not&#xA0;only&#xA0;new&#xA0;view&#xA0;becomes&#xA0;active,\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;but&#xA0;also&#xA0;when&#xA0;no&#xA0;view&#xA0;is&#xA0;active.\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;When&#xA0;view&#xA0;should&#xA0;stop&#xA0;being&#xA0;active&#xA0;this&#xA0;method&#xA0;is&#xA0;called\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*/\n&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;deactivate(View&#xA0;currentView,&#xA0;int&#xA0;position);\n}</pre><p>ListItemsVisibilityCalculator &#x8DDF;&#x8E2A;&#x6EDA;&#x52A8;&#x7684;&#x65B9;&#x5411;&#x5E76;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x8BA1;&#x7B97;item&#x7684;&#x53EF;&#x89C6;&#x5EA6;&#x3002;item&#x7684;&#x53EF;&#x89C1;&#x5EA6;&#x53EF;&#x80FD;&#x53D6;&#x51B3;&#x4E8E;&#x5217;&#x8868;&#x4E2D;&#x5355;&#x4E2A;item&#x91CC;&#x9762;&#x7684;&#x4EFB;&#x610F;view&#x3002;&#x7531;&#x4F60;&#x6765;&#x5B9E;&#x73B0;getVisibilityPercents() &#x65B9;&#x6CD5;&#x3002;</p><p>&#x5728;sample demo app&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#xFF1A;</p><pre class=\"brush:js;toolbar:false\">/**\n&#xA0;*&#xA0;This&#xA0;method&#xA0;calculates&#xA0;visibility&#xA0;percentage&#xA0;of&#xA0;currentView.\n&#xA0;*&#xA0;This&#xA0;method&#xA0;works&#xA0;correctly&#xA0;when&#xA0;currentView&#xA0;is&#xA0;smaller&#xA0;then&#xA0;it's&#xA0;enclosure.\n&#xA0;*&#xA0;@param&#xA0;currentView&#xA0;-&#xA0;view&#xA0;which&#xA0;visibility&#xA0;should&#xA0;be&#xA0;calculated\n&#xA0;*&#xA0;@return&#xA0;currentView&#xA0;visibility&#xA0;percents\n&#xA0;*/\n@Override\npublic&#xA0;int&#xA0;getVisibilityPercents(View&#xA0;currentView)&#xA0;{\n\n&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;percents&#xA0;=&#xA0;100;\n\n&#xA0;&#xA0;&#xA0;&#xA0;currentView.getLocalVisibleRect(mCurrentViewRect);\n\n&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;height&#xA0;=&#xA0;currentView.getHeight();\n\n&#xA0;&#xA0;&#xA0;&#xA0;if(viewIsPartiallyHiddenTop()){\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;view&#xA0;is&#xA0;partially&#xA0;hidden&#xA0;behind&#xA0;the&#xA0;top&#xA0;edge\n&#xA0;&#xA0;&#xA0;&#xA0;percents&#xA0;=&#xA0;(height&#xA0;-&#xA0;mCurrentViewRect.top)&#xA0;*&#xA0;100&#xA0;/&#xA0;height;\n&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;else&#xA0;if(viewIsPartiallyHiddenBottom(height)){\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;percents&#xA0;=&#xA0;mCurrentViewRect.bottom&#xA0;*&#xA0;100&#xA0;/&#xA0;height;\n&#xA0;&#xA0;&#xA0;&#xA0;}\n\n&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;percents;\n}</pre><p>&#x6BCF;&#x4E2A; view&#x90FD;&#x9700;&#x8981;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BA1;&#x7B97;&#x5B83;&#x7684;&#x53EF;&#x89C1;&#x767E;&#x5206;&#x6BD4;&#x3002;&#x6EDA;&#x52A8;&#x53D1;&#x751F;&#x7684;&#x65F6;&#x5019;&#xFF0C;SingleListViewItemActiveCalculator&#x5C06;&#x4ECE;&#x6BCF;&#x4E2A;view &#x7D22;&#x53D6;&#x8FD9;&#x4E2A;&#x503C;&#xFF0C;&#x6240;&#x6709;&#x8FD9;&#x91CC;&#x7684;&#x5B9E;&#x73B0;&#x4E0D;&#x80FD;&#x592A;&#x590D;&#x6742;&#x3002;</p><p>&#x5F53;&#x67D0;&#x4E2A;&#x90BB;&#x5C45;&#x7684;&#x53EF;&#x89C1;&#x5EA6;&#x8D85;&#x8FC7;&#x4E86;&#x5F53;&#x524D;&#x6D3B;&#x52A8;item&#xFF0C;setActive &#x65B9;&#x6CD5;&#x5C06;&#x88AB;&#x8C03;&#x7528;&#x3002;&#x5C31;&#x5728;&#x8FD9;&#x65F6;&#x5E94;&#x8BE5;&#x5207;&#x6362;&#x64AD;&#x653E;&#x3002;</p><p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x4F5C;&#x4E3A;ListItemsVisibilityCalculator &#x548C; ListView &#x6216;&#x8005; RecyclerView&#x4E4B;&#x95F4;&#x9002;&#x914D;&#x5668;&#x7684;ItemsPositionGetter&#x3002;&#x8FD9;&#x6837;ListItemsVisibilityCalculator &#x5C31;&#x4E0D;&#x9700;&#x8981;&#x77E5;&#x9053;&#x8FD9;&#x5230;&#x5E95;&#x662F;&#x4E00;&#x4E2A;ListView &#x8FD8;&#x662F;RecyclerView&#x3002;&#x5B83;&#x53EA;&#x662F;&#x505A;&#x81EA;&#x5DF1;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x4F46;&#x662F;&#x5B83;&#x9700;&#x8981;&#x77E5;&#x9053;&#x4E00;&#x4E9B;ItemsPositionGetter&#x63D0;&#x4F9B;&#x7684;&#x4FE1;&#x606F;&#xFF1A;</p><pre class=\"brush:js;toolbar:false\">/**\n&#xA0;*&#xA0;This&#xA0;class&#xA0;is&#xA0;an&#xA0;API&#xA0;for&#xA0;{@link&#xA0;ListItemsVisibilityCalculator}\n&#xA0;*&#xA0;Using&#xA0;this&#xA0;class&#xA0;is&#xA0;can&#xA0;access&#xA0;all&#xA0;the&#xA0;data&#xA0;from&#xA0;RecyclerView&#xA0;/&#xA0;\n&#xA0;*&#xA0;ListView\n&#xA0;*\n&#xA0;*&#xA0;There&#xA0;is&#xA0;two&#xA0;different&#xA0;implementations&#xA0;for&#xA0;ListView&#xA0;and&#xA0;for&#xA0;\n&#xA0;*&#xA0;RecyclerView.\n&#xA0;*&#xA0;RecyclerView&#xA0;introduced&#xA0;LayoutManager&#xA0;that's&#xA0;why&#xA0;some&#xA0;of&#xA0;data&#xA0;moved\n&#xA0;*&#xA0;there\n&#xA0;*\n&#xA0;*&#xA0;Created&#xA0;by&#xA0;danylo.volokh&#xA0;on&#xA0;9/20/2015.\n&#xA0;*/\npublic&#xA0;interface&#xA0;ItemsPositionGetter&#xA0;{\n&#xA0;\n&#xA0;&#xA0;&#xA0;View&#xA0;getChildAt(int&#xA0;position);\n\n&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;indexOfChild(View&#xA0;view);\n\n&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;getChildCount();\n\n&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;getLastVisiblePosition();\n\n&#xA0;&#xA0;&#xA0;&#xA0;int&#xA0;getFirstVisiblePosition();\n}</pre><p>&#x8003;&#x8651;&#x5230;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x548C;model&#x5206;&#x79BB;&#x7684;&#x539F;&#x5219;&#xFF0C;&#x628A;&#x90A3;&#x6837;&#x7684;&#x903B;&#x8F91;&#x653E;&#x5728;model &#x4E2D;&#x662F;&#x6709;&#x70B9;&#x4E71;&#x3002;&#x4F46;&#x662F;&#x505A;&#x4E00;&#x4E9B;&#x4FEE;&#x6539;&#x7684;&#x4E5F;&#x8BB8;&#x80FD;&#x505A;&#x5230;&#x5206;&#x79BB;&#x3002;&#x4E0D;&#x8FC7;&#x867D;&#x7136;&#x73B0;&#x5728;&#x4E0D;&#x600E;&#x4E48;&#x597D;&#x770B;&#xFF0C;&#x4F46;&#x662F;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#x8FD8;&#x662F;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x3002;</p><p>&#x4E0B;&#x9762;&#x662F;&#x6548;&#x679C;&#x56FE;&#xFF1A;</p><p class=\"\"><span class=\"md-image md-img-loaded\"><img src=\"https://cdn-images-1.medium.com/max/800/1*Qqa81vAPYEzUWXq1dhfm6A.gif\" alt=\"\"></span></p><p>&#x4E0B;&#x9762;&#x662F;&#x8FD9;&#x4E2A;library&#x7684; gradle dependency&#xFF1A;</p><pre class=\"brush:js;toolbar:false\">dependencies&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;compile&#xA0;'com.github.danylovolokh:list-visibility-utils:0.2.0'\n}</pre><h4>Combination of Video Player Manager and List Visibility Utils to implement video playback in the scrolling list.</h4><p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x4E24;&#x4E2A;&#x80FD;&#x89E3;&#x51B3;&#x6211;&#x4EEC;&#x6240;&#x6709;&#x95EE;&#x9898;&#x7684;library&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x628A;&#x5B83;&#x4EEC;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x5B9E;&#x73B0;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x529F;&#x80FD;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x662F;&#x53D6;&#x81EA;&#x4F7F;&#x7528;&#x4E86;RecyclerView&#x7684;fragment &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p><p>1.&#x521D;&#x59CB;&#x5316;ListItemsVisibilityCalculator&#xFF0C;&#x5E76;&#x4F20;&#x9012;&#x4E00;&#x4E2A;list&#x7684;&#x5F15;&#x7528;&#x7ED9;&#x5B83;&#x3002;</p><pre class=\"brush:js;toolbar:false\">/**\n&#xA0;*&#xA0;Only&#xA0;the&#xA0;one&#xA0;(most&#xA0;visible)&#xA0;view&#xA0;should&#xA0;be&#xA0;active&#xA0;(and&#xA0;playing).\n&#xA0;*&#xA0;To&#xA0;calculate&#xA0;visibility&#xA0;of&#xA0;views&#xA0;we&#xA0;use&#xA0;{@link&#xA0;SingleListViewItemActiveCalculator}\n&#xA0;*/\nprivate&#xA0;final&#xA0;ListItemsVisibilityCalculator&#xA0;mVideoVisibilityCalculator&#xA0;=&#xA0;new&#xA0;SingleListViewItemActiveCalculator(\nnew&#xA0;DefaultSingleItemCalculatorCallback(),&#xA0;mList);</pre><p>DefaultSingleItemCalculatorCallback &#x53EA;&#x662F;&#x5728;&#x6D3B;&#x52A8;view&#x6539;&#x53D8;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528;&#x4E86; ListItem.setActive &#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x91CD;&#x5199;&#x5B83;&#xFF0C;&#x505A;&#x81EA;&#x5DF1;&#x60F3;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF1A;</p><pre class=\"brush:js;toolbar:false\">/**\n&#xA0;*&#xA0;Methods&#xA0;of&#xA0;this&#xA0;callback&#xA0;will&#xA0;be&#xA0;called&#xA0;when&#xA0;new&#xA0;active&#xA0;item&#xA0;is&#xA0;found&#xA0;{@link&#xA0;Callback#activateNewCurrentItem(ListItem,&#xA0;View,&#xA0;int)}\n&#xA0;*&#xA0;or&#xA0;when&#xA0;there&#xA0;is&#xA0;no&#xA0;active&#xA0;item&#xA0;{@link&#xA0;Callback#deactivateCurrentItem(ListItem,&#xA0;View,&#xA0;int)}&#xA0;-&#xA0;this&#xA0;might&#xA0;happen&#xA0;when&#xA0;user&#xA0;scrolls&#xA0;really&#xA0;fast\n&#xA0;*/\npublic&#xA0;interface&#xA0;Callback&lt;T&#xA0;extends&#xA0;ListItem&gt;{\n&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;activateNewCurrentItem(T&#xA0;item,&#xA0;View&#xA0;view,&#xA0;int&#xA0;position);\n&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;deactivateCurrentItem(T&#xA0;item,&#xA0;View&#xA0;view,&#xA0;int&#xA0;position);\n}</pre><p>\\2. &#x521D;&#x59CB;&#x5316;VideoPlayerManager&#x3002;</p><pre class=\"brush:js;toolbar:false\">/**\n&#xA0;*&#xA0;Here&#xA0;we&#xA0;use&#xA0;{@link&#xA0;SingleVideoPlayerManager},&#xA0;which&#xA0;means&#xA0;that&#xA0;only&#xA0;one&#xA0;video&#xA0;playback&#xA0;is&#xA0;possible.\n&#xA0;*/\nprivate&#xA0;final&#xA0;VideoPlayerManager&lt;MetaData&gt;&#xA0;mVideoPlayerManager&#xA0;=&#xA0;new&#xA0;SingleVideoPlayerManager(new&#xA0;PlayerItemChangeListener()&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;@Override\n&#xA0;&#xA0;&#xA0;&#xA0;public&#xA0;void&#xA0;onPlayerItemChanged(MetaData&#xA0;metaData)&#xA0;{\n\n&#xA0;&#xA0;&#xA0;&#xA0;}\n});</pre><p>\\3. &#x4E3A;RecyclerView&#x8BBE;&#x7F6E;on scroll listener &#x5E76;&#x4F20;&#x9012;scroll events &#x5230; list visibility utils&#x3002;</p><pre class=\"brush:js;toolbar:false\">@Override\npublic&#xA0;void&#xA0;onScrollStateChanged(RecyclerView&#xA0;view,&#xA0;int&#xA0;scrollState)&#xA0;{\n&#xA0;mScrollState&#xA0;=&#xA0;scrollState;\n&#xA0;if(scrollState&#xA0;==&#xA0;RecyclerView.SCROLL_STATE_IDLE&#xA0;&amp;&amp;&#xA0;mList.isEmpty()){\n\n&#xA0;mVideoVisibilityCalculator.onScrollStateIdle(\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mItemsPositionGetter,\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mLayoutManager.findFirstVisibleItemPosition(),\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mLayoutManager.findLastVisibleItemPosition());\n&#xA0;}\n&#xA0;}\n\n@Override\npublic&#xA0;void&#xA0;onScrolled(RecyclerView&#xA0;recyclerView,&#xA0;int&#xA0;dx,&#xA0;int&#xA0;dy)&#xA0;{\n&#xA0;if(!mList.isEmpty()){\n&#xA0;&#xA0;&#xA0;mVideoVisibilityCalculator.onScroll(\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mItemsPositionGetter,\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mLayoutManager.findFirstVisibleItemPosition(),\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mLayoutManager.findLastVisibleItemPosition()&#xA0;-\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mLayoutManager.findFirstVisibleItemPosition()&#xA0;+&#xA0;1,\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mScrollState);\n&#xA0;}\n}\n});</pre><p>\\4. &#x521B;&#x5EFA;ItemsPositionGetter&#x3002;</p><pre class=\"brush:js;toolbar:false\">ItemsPositionGetter&#xA0;mItemsPositionGetter&#xA0;=&#xA0;\nnew&#xA0;RecyclerViewItemPositionGetter(mLayoutManager,&#xA0;mRecyclerView);</pre><p>\\5.&#x540C;&#x65F6;&#x6211;&#x4EEC;&#x5728;onResume &#x4E2D;&#x8C03;&#x7528;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x4EE5;&#x4FBF;&#x5728;&#x6211;&#x4EEC;&#x6253;&#x5F00;&#x5C4F;&#x5E55;&#x7684;&#x65F6;&#x5019;&#x9A6C;&#x4E0A;&#x5F00;&#x59CB;&#x8BA1;&#x7B97;&#x53EF;&#x89C1;&#x8303;&#x56F4;&#x6700;&#x5927;&#x7684;item&#x3002;</p><pre class=\"brush:js;toolbar:false\">@Override\npublic&#xA0;void&#xA0;onResume()&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;super.onResume();\n&#xA0;&#xA0;&#xA0;&#xA0;if(!mList.isEmpty()){\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;need&#xA0;to&#xA0;call&#xA0;this&#xA0;method&#xA0;from&#xA0;list&#xA0;view&#xA0;handler&#xA0;in&#xA0;order&#xA0;to&#xA0;have&#xA0;filled&#xA0;list\n\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mRecyclerView.post(new&#xA0;Runnable()&#xA0;{\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;@Override\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;public&#xA0;void&#xA0;run()&#xA0;{\n\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mVideoVisibilityCalculator.onScrollStateIdle(\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mItemsPositionGetter,\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mLayoutManager.findFirstVisibleItemPosition(),\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;mLayoutManager.findLastVisibleItemPosition());\n\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;});\n&#xA0;&#xA0;&#xA0;&#xA0;}\n}</pre><p>&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x7EC4;&#x5728;&#x5217;&#x8868;&#x4E2D;&#x64AD;&#x653E;&#x7684;&#x89C6;&#x9891;&#x3002;</p><p class=\"\"><span class=\"md-image md-img-loaded\"><img src=\"https://cdn-images-1.medium.com/max/800/1*6uK9qO4g5v3DralCH03yzA.gif\" alt=\"\"></span></p><p>&#x603B;&#x7684;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x53EA;&#x662F;&#x5BF9;&#x6700;&#x91CD;&#x8981;&#x90E8;&#x5206;&#x7684;&#x89E3;&#x91CA;&#x3002;&#x5728;sample &#xA0;app&#x4E2D;&#x6709;&#x66F4;&#x591A;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p><p><a href=\"https://github.com/danylovolokh/VideoPlayerManager\">https://github.com/danylovolokh/VideoPlayerManager</a></p><p>&#x8981;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x7EC6;&#x8282;&#x8BF7;&#x67E5;&#x770B;&#x6E90;&#x4EE3;&#x7801;&#x3002;</p><p>Cheers&#xA0;;)</p>\n\t\t\t\t</div>\n\t\t\t \n\t\t\t\t</div>",
      "type": "Android",
      "url": "http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0130/3927.html",
      "who": "wuzheng"
    }
  ]
}
